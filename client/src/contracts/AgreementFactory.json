{
  "contractName": "AgreementFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract DisputeResolution",
          "name": "_disputeResolutionContract",
          "type": "address"
        },
        {
          "internalType": "contract DefaultTerms",
          "name": "_defaultTermsContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contractRegistry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "landlord",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tenant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "landlordUsername",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tenantUsername",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "rentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "securityDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "leaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "terminationDate",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "propertyID",
          "type": "string"
        },
        {
          "internalType": "enum AgreementFactory.AgreementStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "tenantApproved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "landlordApproved",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "defaultTermsContract",
      "outputs": [
        {
          "internalType": "contract DefaultTerms",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "disputeResolutionContract",
      "outputs": [
        {
          "internalType": "contract DisputeResolution",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_landlord",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tenant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_landlordUsername",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tenantUsername",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_rentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_securityDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_leaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_propertyID",
          "type": "string"
        }
      ],
      "name": "createRentalAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tenant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_landlord",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_propertyID",
          "type": "string"
        }
      ],
      "name": "approveAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tenant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_landlord",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_propertyID",
          "type": "string"
        }
      ],
      "name": "disapproveAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tenant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_landlord",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_propertyID",
          "type": "string"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_reason",
          "type": "string"
        }
      ],
      "name": "raiseDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_resolution",
          "type": "string"
        }
      ],
      "name": "resolveDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tenant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_landlord",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_propertyID",
          "type": "string"
        }
      ],
      "name": "getContractID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tenant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_landlord",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_propertyID",
          "type": "string"
        }
      ],
      "name": "getContractDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "landlord",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tenant",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "landlordUsername",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tenantUsername",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "securityDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "leaseDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "terminationDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "propertyID",
              "type": "string"
            },
            {
              "internalType": "enum AgreementFactory.AgreementStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "string[]",
              "name": "terms",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "tenantApproved",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "landlordApproved",
              "type": "bool"
            }
          ],
          "internalType": "struct AgreementFactory.Contract",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "getDisputeDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "agreementID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tenant",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "landlord",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "resolution",
              "type": "string"
            },
            {
              "internalType": "enum DisputeResolution.DisputeStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct DisputeResolution.Dispute",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementID",
          "type": "uint256"
        }
      ],
      "name": "getAllDisputes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "agreementID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tenant",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "landlord",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "resolution",
              "type": "string"
            },
            {
              "internalType": "enum DisputeResolution.DisputeStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct DisputeResolution.Dispute[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_landlordAddress",
          "type": "address"
        }
      ],
      "name": "getLandlordsContracts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "landlord",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tenant",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "landlordUsername",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tenantUsername",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "securityDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "leaseDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "terminationDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "propertyID",
              "type": "string"
            },
            {
              "internalType": "enum AgreementFactory.AgreementStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "string[]",
              "name": "terms",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "tenantApproved",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "landlordApproved",
              "type": "bool"
            }
          ],
          "internalType": "struct AgreementFactory.Contract[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tenantAddress",
          "type": "address"
        }
      ],
      "name": "getTenantsContracts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "ID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "landlord",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tenant",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "landlordUsername",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tenantUsername",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "rentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "securityDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "leaseDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "terminationDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "propertyID",
              "type": "string"
            },
            {
              "internalType": "enum AgreementFactory.AgreementStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "string[]",
              "name": "terms",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "tenantApproved",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "landlordApproved",
              "type": "bool"
            }
          ],
          "internalType": "struct AgreementFactory.Contract[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DisputeResolution\",\"name\":\"_disputeResolutionContract\",\"type\":\"address\"},{\"internalType\":\"contract DefaultTerms\",\"name\":\"_defaultTermsContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tenant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_landlord\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_propertyID\",\"type\":\"string\"}],\"name\":\"approveAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractRegistry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"landlordUsername\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tenantUsername\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"securityDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaseDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"terminationDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"propertyID\",\"type\":\"string\"},{\"internalType\":\"enum AgreementFactory.AgreementStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"tenantApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"landlordApproved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tenant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_landlordUsername\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tenantUsername\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_rentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_securityDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leaseDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_propertyID\",\"type\":\"string\"}],\"name\":\"createRentalAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultTermsContract\",\"outputs\":[{\"internalType\":\"contract DefaultTerms\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tenant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_landlord\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_propertyID\",\"type\":\"string\"}],\"name\":\"disapproveAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeResolutionContract\",\"outputs\":[{\"internalType\":\"contract DisputeResolution\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementID\",\"type\":\"uint256\"}],\"name\":\"getAllDisputes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agreementID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"resolution\",\"type\":\"string\"},{\"internalType\":\"enum DisputeResolution.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct DisputeResolution.Dispute[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tenant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_landlord\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_propertyID\",\"type\":\"string\"}],\"name\":\"getContractDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"landlordUsername\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tenantUsername\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"securityDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaseDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"terminationDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"propertyID\",\"type\":\"string\"},{\"internalType\":\"enum AgreementFactory.AgreementStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string[]\",\"name\":\"terms\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"tenantApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"landlordApproved\",\"type\":\"bool\"}],\"internalType\":\"struct AgreementFactory.Contract\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tenant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_landlord\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_propertyID\",\"type\":\"string\"}],\"name\":\"getContractID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"getDisputeDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agreementID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"resolution\",\"type\":\"string\"},{\"internalType\":\"enum DisputeResolution.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct DisputeResolution.Dispute\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_landlordAddress\",\"type\":\"address\"}],\"name\":\"getLandlordsContracts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"landlordUsername\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tenantUsername\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"securityDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaseDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"terminationDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"propertyID\",\"type\":\"string\"},{\"internalType\":\"enum AgreementFactory.AgreementStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string[]\",\"name\":\"terms\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"tenantApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"landlordApproved\",\"type\":\"bool\"}],\"internalType\":\"struct AgreementFactory.Contract[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tenantAddress\",\"type\":\"address\"}],\"name\":\"getTenantsContracts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"landlord\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"landlordUsername\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tenantUsername\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"securityDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaseDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"terminationDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"propertyID\",\"type\":\"string\"},{\"internalType\":\"enum AgreementFactory.AgreementStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string[]\",\"name\":\"terms\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"tenantApproved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"landlordApproved\",\"type\":\"bool\"}],\"internalType\":\"struct AgreementFactory.Contract[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"raiseDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_resolution\",\"type\":\"string\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tenant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_landlord\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_propertyID\",\"type\":\"string\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AgreementFactory.sol\":\"AgreementFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/AgreementFactory.sol\":{\"keccak256\":\"0x20eb72564e8dbd650042d9735aa05b94f4ab5885f2c88394e13066f041747aea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0467bd43730f01f8a686ddbad1a7036b270104a1353ac0244414bafd4882de1\",\"dweb:/ipfs/QmUpv68R2741qTKxdJcSdEP7Dsa6dMVu4c9nWPbHNX6csD\"]},\"project:/contracts/DefaultTerms.sol\":{\"keccak256\":\"0xca4324dea56137108df86cfa2407e93a70a355431f5edad4ba6ed6fead96329d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb3bc96b2a140524e4c9a50b9d242516dc625a67df15128d7e8a2c0932e6c641\",\"dweb:/ipfs/QmU1AgJMqEWFAQKgbc9y8vCjf4TmiRjeC85ji2j9scYFtQ\"]},\"project:/contracts/DisputeResolution.sol\":{\"keccak256\":\"0xcc12ac0921d5fbd35651e2a67aa37c14df6ca0f9609972e6dafff807e11016f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://712c10febc29e36c7664957c78b07e8c74357df70e2b3201e6dbd5e0fae6ef0e\",\"dweb:/ipfs/Qmb7vLAXPzBQNEZ69zvSftLpSWnabmamsiHya7BiACmePT\"]}},\"version\":1}",
  "bytecode": "0x60803461008a57601f6123d838819003918201601f19168301916001600160401b0383118484101761008f57808492604094855283398101031261008a5780516001600160a01b03918282169182900361008a576020015191821680920361008a5760018060a01b031990816001541617600155600254161760025560405161233290816100a68239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80632b0b9d99146101075780635b982d2f1461010257806369bf9753146100fd5780636d9a5acc146100f85780638a46c9d8146100f3578063951113a9146100ee578063a10b29b7146100e9578063a84b8162146100e4578063b110205a146100df578063cf51b45d146100da578063da997b27146100d5578063e2bc6cca146100d0578063ea89735d146100cb578063f3279e82146100c65763f46f96b2146100c157600080fd5b6112e7565b611256565b61118e565b611063565b610f42565b610e99565b610dda565b610b59565b610a4a565b610994565b610911565b6107a6565b610599565b610475565b610443565b6001600160a01b0381160361011d57565b600080fd5b6004359061012f8261010c565b565b6024359061012f8261010c565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161016757604052565b61013e565b61010081019081106001600160401b0382111761016757604052565b90601f801991011681019081106001600160401b0382111761016757604052565b604051906101e082018281106001600160401b0382111761016757604052565b6040519061012f8261016c565b6001600160401b03811161016757601f01601f191660200190565b81601f8201121561011d57803590610208826101d6565b926102166040519485610188565b8284526020838301011161011d57816000926020809301838601378301015290565b606060031982011261011d576004356102508161010c565b9160243561025d8161010c565b91604435906001600160401b03821161011d5761027c916004016101f1565b90565b60005b8381106102925750506000910152565b8181015183820152602001610282565b906020916102bb8151809281855285808601910161027f565b601f01601f1916010190565b634e487b7160e01b600052602160045260246000fd5b600311156102e757565b6102c7565b9060038210156102e75752565b908082519081815260208091019281808460051b8301019501936000915b8483106103275750505050505090565b9091929394958480610345600193601f198682030187528a516102a2565b9801930193019194939290610317565b805182526020808201516001600160a01b0316908301529061027c906040838101516001600160a01b0316908201526104276104006103b86103a660608701516101e08060608801528601906102a2565b608087015185820360808701526102a2565b60a086015160a085015260c086015160c085015260e086015160e0850152610100808701519085015261012080870151908501526101408087015190858303908601526102a2565b61041361016080870151908501906102ec565b6101808086015190848303908501526102f9565b6101a080850151151590830152926101c0908101511515910152565b3461011d5761047161045d61045736610238565b916120b1565b604051918291602083526020830190610355565b0390f35b3461011d57606036600319011261011d576004356001600160401b0360243581811161011d576104a99036906004016101f1565b9060443590811161011d576104c29036906004016101f1565b60009283916104d383548310611d00565b6105036104f360026104e485610c04565b5001546001600160a01b031690565b6001600160a01b03163314611d43565b600154610520906001600160a01b03165b6001600160a01b031690565b9061052f60026104e485610c04565b9061053e60016104e486610c04565b93833b15610595576105688692604051988997889687956395fdbdfb60e01b875260048701611d8f565b03925af180156105905761057a575080f35b8061058761058d92610154565b80610f37565b80f35b61166e565b8580fd5b3461011d576105a736610238565b60009291835b845481101561079f576105bf81610c04565b506002908101546001600160a01b0386811692918116831480610785575b8061071f575b6105f8575050506105f390611326565b6105ad565b9295509093509161060885610c04565b509361062b61061c600b8097015460ff1690565b610625816102dd565b15611b32565b331461070c575b1633146106c4575b61064383610c04565b50600d9081015460081c60ff1690816106b0575b50610663575b50505080f35b82610694610699926106848561067b6106a898610c04565b50015460ff1690565b61068d816102dd565b1415611bca565b610c04565b5001805460ff19166001179055565b38808061065d565b6106be915061067b85610c04565b38610657565b6107076106d084610c04565b506106ed60016106e5600d8094015460ff1690565b151514611b7e565b6106f685610c04565b5001805461ff001916610100179055565b61063a565b61071a600d61069987610c04565b610632565b5061072984610c04565b5060409081519061077c600a836107486020948583019384910161133a565b039361075c601f1995868101835282610188565b51902093519182019282610770858d6113bd565b03908101835282610188565b519020146105e3565b5061079460016104e486610c04565b8116858216146105dd565b5050505080f35b3461011d576107b436610238565b90600092835b845481101561079f576107cc81610c04565b506002908101546001600160a01b03166001600160a01b039081168482161490816108f5575b508061089b575b8061087b575b610812575061080d90611326565b6107ba565b925061058d935061086c915061084b61082a82610c04565b509361083b600b8096015460ff1690565b610844816102dd565b1415611c5a565b610694600161085d8561067b85610c04565b610866816102dd565b14611cb4565b5001805460ff19166002179055565b508061088b600b61067b85610c04565b610894816102dd565b14156107ff565b506108a582610c04565b506040908151906108ec600a836108c46020948583019384910161133a565b03936108d8601f1995868101835282610188565b51902093519182019282610770858c6113bd565b519020146107f9565b905061090560016104e485610c04565b811690851614386107f2565b3461011d57602061092a61092436610238565b91611dd2565b604051908152f35b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106109665750505050505090565b9091929394958480610984600193603f198682030187528a51610355565b9801930193019194939290610956565b3461011d57602036600319011261011d576004356109b18161010c565b600054906109be82612298565b906000906001600160a01b0390811690825b8581106109e857838552604051806104718782610932565b828260026109f584610c04565b5001541614610a0d575b610a0890611326565b6109d0565b92610a42610a0891610a27610a2187610c04565b50611fc6565b610a3182896122e8565b52610a3c81886122e8565b50611326565b9390506109ff565b3461011d57610a5836610238565b90600092835b845481101561079f57610a7081610c04565b506002908101546001600160a01b03166001600160a01b03908116848216149081610b3d575b5080610b0b575b610ab05750610aab90611326565b610a5e565b925061058d935061086c9150610694610ac882610c04565b5093610adc61061c600b8097015460ff1690565b610afe6001610aee8761067b87610c04565b610af7816102dd565b1415611c16565b6106848561067b85610c04565b50610b1582610c04565b50604090815190610b34600a836108c46020948583019384910161133a565b51902014610a9d565b9050610b4d60016104e485610c04565b81169085161438610a96565b3461011d57602036600319011261011d57600435610b768161010c565b60005490610b8382612298565b906000906001600160a01b0390811690825b858110610bad57838552604051806104718782610932565b82826001610bba84610c04565b5001541614610bd2575b610bcd90611326565b610b95565b92610be6610bcd91610a27610a2187610c04565b939050610bc4565b634e487b7160e01b600052603260045260246000fd5b600054811015610c3e57600e9060008052027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190600090565b610bee565b90600182811c92168015610c73575b6020831014610c5d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c52565b9060405191826000825492610c9184610c43565b908184526001948581169081600014610cfe5750600114610cbb575b505061012f92500383610188565b9093915060005260209081600020936000915b818310610ce657505061012f93508201013880610cad565b85548884018501529485019487945091830191610cce565b91505061012f94506020925060ff191682840152151560051b8201013880610cad565b9992969b9e9d9b610d92610dbc979661012f9f9a936101a09e978e610d73610dd29f989d610d63610dc89f610d84968552602085019060018060a01b03169052565b6001600160a01b03166040830152565b6101c09081606082015201906102a2565b8d810360808f0152906102a2565b9560a08c015260c08b015260e08a01526101008901526101208801528682036101408801526102a2565b986101608501906102ec565b1515610180830152565b019015159052565b3461011d57602036600319011261011d5760043560005481101561011d57610e0190610c04565b50805460018201549091906001600160a01b031660028201546001600160a01b031691610e3060038201610c7d565b93610e3d60048301610c7d565b91600581015460068201546007830154600884015490600985015492600a8601610e6690610c7d565b94600b870154610e769060ff1690565b96600d0154986040519c8d9c8d9c8c60081c60ff169c60ff169b6104719e610d21565b3461011d5760006040366003190112610f3457806024356001600160401b038111610f3157610ecc9036906004016101f1565b6001546001600160a01b031690813b15610f2d578291610f129160405194858094819363cf51b45d60e01b835260043560048401526040602484015260448301906102a2565b03925af1801561059057610f24575080f35b61058d90610154565b5050fd5b50fd5b80fd5b600091031261011d57565b3461011d57600036600319011261011d576002546040516001600160a01b039091168152602090f35b9060028210156102e75752565b80518252602080820151908301526040808201516001600160a01b0390811691840191909152606080830151909116908301529061027c9060e080610ff6610fe4610fd260808801516101008060808901528701906102a2565b60a088015186820360a08801526102a2565b60c087015185820360c08701526102a2565b940151910190610f6b565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106110355750505050505090565b9091929394958480611053600193603f198682030187528a51610f78565b9801930193019194939290611025565b3461011d5760208060031936011261011d57600154604051632cde9bef60e01b815260048035908201526000918290829060249082906001600160a01b03165afa9182156105905780926110c0575b604051806104718582611001565b9091503d8082843e6110d28184610188565b82019183818403126111795780516001600160401b039182821161117557019280601f850112156111715783519161110983611580565b946111176040519687610188565b838652868087019460051b82010194838611610f3457878201945b86861061114c5750505050505050610471915038806110b2565b8551848111611171578991611166878480948801016121b9565b815201950194611132565b8280fd5b8380fd5b5080fd5b90602061027c928181520190610f78565b3461011d57602036600319011261011d5760e06040516111ad8161016c565b600091818380935282602082015282604082015282606082015260606080820152606060a0820152606060c082015201526111f261051460015460018060a01b031690565b60405163ea89735d60e01b81526004803590820152908290829060249082905afa90811561059057826104719392611233575b50506040519182918261117d565b61124f92503d8091833e6112478183610188565b810190612273565b3880611225565b3461011d5761012036600319011261011d57611270610122565b611278610131565b6001600160401b03919060443583811161011d5761129a9036906004016101f1565b60643584811161011d576112b29036906004016101f1565b916101043594851161011d576112cf6112e59536906004016101f1565b9360e4359360c4359360a435936084359361175c565b005b3461011d57600036600319011261011d576001546040516001600160a01b039091168152602090f35b634e487b7160e01b600052601160045260246000fd5b60001981146113355760010190565b611310565b60009291815461134981610c43565b926001918083169081156113a25750600114611366575b50505050565b90919293945060005260209081600020906000915b8583106113915750505050019038808080611360565b80548584015291830191810161137b565b60ff1916845250505081151590910201915038808080611360565b906113d06020928281519485920161027f565b0190565b9062278d009182810292818404149015171561133557565b9190820180921161133557565b600054600160401b811015610167576001810180600055811015610c3e57600e9060008052027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190600090565b60001981019190821161133557565b818110611461575050565b60008155600101611456565b9190601f811161147c57505050565b61012f926000526020600020906020601f840160051c830193106114a8575b601f0160051c0190611456565b909150819061149b565b91909182516001600160401b038111610167576114d9816114d38454610c43565b8461146d565b602080601f831160011461151557508192939460009261150a575b50508160011b916000199060031b1c1916179055565b0151905038806114f4565b90601f1983169561152b85600052602060002090565b926000905b8882106115685750508360019596971061154f575b505050811b019055565b015160001960f88460031b161c19169055388080611545565b80600185968294968601518155019501930190611530565b6001600160401b0381116101675760051b60200190565b81601f8201121561011d5780516115ad816101d6565b926115bb6040519485610188565b8184526020828401011161011d5761027c916020808501910161027f565b90602090818382031261011d5782516001600160401b039384821161011d570181601f8201121561011d57805161160f81611580565b9461161d6040519687610188565b818652848087019260051b8401019380851161011d57858401925b858410611649575050505050505090565b835183811161011d578791611663848480948a0101611597565b815201930192611638565b6040513d6000823e3d90fd5b815191600160401b83116101675781548383558084106116d8575b506116aa602080920192600052602060002090565b6000925b8484106116bc575050505050565b600183826116cc839451866114b2565b019201930192906116ae565b6000838152846020822092830192015b8281106116f6575050611695565b8061170360019254610c43565b80611710575b50016116e8565b601f9081811184146117285750508281555b38611709565b8361174a9261173c85600052602060002090565b920160051c82019101611456565b60008181526020812081835555611722565b9297919760005b6000548110156119f85761177681610c04565b506001908101546001600160a01b03918783169183168214806119de575b80611983575b80611965575b611920576105146117b4916104e486610c04565b149081611904575b50806118aa575b8061188a575b6117db576117d690611326565b611763565b97959250505061012f965061183594915061182f9260056117fb88610c04565b500155600661180987610c04565b50015580600761181887610c04565b50015582600861182787610c04565b5001556113d4565b906113ec565b600961184083610c04565b50015561185d600b61185183610c04565b5001805460ff19169055565b61187d61186982610c04565b50600d908101805460ff1916905591610c04565b5001805461ff0019169055565b50600261189b600b61067b84610c04565b6118a4816102dd565b146117c9565b506118b481610c04565b506040908151906118fb600a836118d36020948583019384910161133a565b03936118e7601f1995868101835282610188565b51902093519182019282610770858b6113bd565b519020146117c3565b905061191460026104e484610c04565b811690841614386117bc565b60405162461bcd60e51b815260206004820181905260248201527f53696d696c617220636f6e747261637420616c72656164792070656e64696e676044820152606490fd5b50611974600b61067b86610c04565b61197d816102dd565b156117a0565b5061198d84610c04565b50876107706119d5604093845190600a826119b06020938483019384910161133a565b03926119c4601f1994858101835282610188565b5190209551938491820180966113bd565b5190201461179a565b506119ed60026104e486610c04565b831686841614611794565b509196959493929790611a096113f9565b5098600054611a1790611447565b8a5560018a0180546001600160a01b0319166001600160a01b039092169190911790556002890180546001600160a01b0319166001600160a01b03909216919091179055611a6890600389016114b2565b611a7590600488016114b2565b60058601556006850155806007850155816008850155611a94906113d4565b611a9d916113ec565b6009830155611aaf90600a83016114b2565b600b8101805460ff19169055600d8101805461ffff1916905560025460405163c6418ab960e01b81529190829081906001600160a01b03165a92600491600094fa9081156105905761012f92600092611b0c575b50600c0161167a565b611b2b90600c92933d8091833e611b238183610188565b8101906115d9565b9190611b03565b15611b3957565b60405162461bcd60e51b815260206004820152601860248201527f41677265656d656e74206973206e6f742070656e64696e6700000000000000006044820152606490fd5b15611b8557565b60405162461bcd60e51b815260206004820152601b60248201527f54656e616e7420686173206e6f7420417070726f7665642079657400000000006044820152606490fd5b15611bd157565b60405162461bcd60e51b815260206004820152601760248201527f41677265656d656e74206973207465726d696e617465640000000000000000006044820152606490fd5b15611c1d57565b60405162461bcd60e51b81526020600482015260156024820152741059dc99595b595b9d081a5cc8185c1c1c9bdd9959605a1b6044820152606490fd5b15611c6157565b60405162461bcd60e51b815260206004820152602560248201527f41677265656d656e742068617320616c7265616479206265656e207465726d696044820152641b985d195960da1b6064820152608490fd5b15611cbb57565b60405162461bcd60e51b815260206004820152601760248201527f41677265656d656e74206973206e6f74204163746976650000000000000000006044820152606490fd5b15611d0757565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081859dc99595b595b9d08125160621b6044820152606490fd5b15611d4a57565b60405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792074656e616e742063616e20726169736520612064697370757465006044820152606490fd5b9081526001600160a01b0391821660208201529116604082015260a06060820181905261027c939192611dc4918401906102a2565b9160808184039101526102a2565b90916000928354935b848110611e1c5760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b6044820152606490fd5b611e2a60026104e483610c04565b6001600160a01b03908116858216149081611ec6575b5080611e6c575b611e5957611e5490611326565b611ddb565b92505050611e679150610c04565b505490565b50611e7681610c04565b50604090815190611ebd600a83611e956020948583019384910161133a565b0393611ea9601f1995868101835282610188565b51902093519182019282610770858a6113bd565b51902014611e47565b9050611ed660016104e484610c04565b81169083161438611e40565b604051906101e082018281106001600160401b0382111761016757604052816101c0600091828152826020820152826040820152606080820152606060808201528260a08201528260c08201528260e082015282610100820152826101208201526060610140820152826101608201526060610180820152826101a08201520152565b60038210156102e75752565b908154611f7d81611580565b92611f8b6040519485610188565b818452600090815260208082208186015b848410611faa575050505050565b6001838192611fb885610c7d565b815201920193019290611f9c565b9061012f60ff600d611fd66101a9565b8554815260018601546001600160a01b031660208201529460028101546001600160a01b0316604087015261200d60038201610c7d565b606087015261201e60048201610c7d565b6080870152600581015460a0870152600681015460c0870152600781015460e087015260088101546101008701526009810154610120870152612063600a8201610c7d565b61014087015261208461207a600b83015460ff1690565b6101608801611f65565b612090600c8201611f71565b610180870152015481811615156101a086015260081c1615156101c0840152565b90916120bb611ee2565b506000928354935b8481106121045760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b6044820152606490fd5b61211260026104e483610c04565b6001600160a01b03908116858216149081612185575b5080612153575b6121415761213c90611326565b6120c3565b91505061027c9250610a219150610c04565b5061215d81610c04565b5060409081519061217c600a83611e956020948583019384910161133a565b5190201461212f565b905061219560016104e484610c04565b81169083161438612128565b519061012f8261010c565b5190600282101561011d57565b9190916101008184031261011d576121cf6101c9565b9281518452602082015160208501526121ea604083016121a1565b60408501526121fb606083016121a1565b60608501526080820151916001600160401b039283811161011d5782612222918301611597565b608086015260a081015183811161011d578261223f918301611597565b60a086015260c081015192831161011d5761226160e09261226c948301611597565b60c0860152016121ac565b60e0830152565b9060208282031261011d5781516001600160401b03811161011d5761027c92016121b9565b906122a282611580565b6122af6040519182610188565b82815280926122c0601f1991611580565b019060005b8281106122d157505050565b6020906122dc611ee2565b828285010152016122c5565b8051821015610c3e5760209160051b01019056fea264697066735822122015e4e8cabfdb10fd75c470307604007b1a25c76ba7618a9b1cdfa58fae25594c64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c80632b0b9d99146101075780635b982d2f1461010257806369bf9753146100fd5780636d9a5acc146100f85780638a46c9d8146100f3578063951113a9146100ee578063a10b29b7146100e9578063a84b8162146100e4578063b110205a146100df578063cf51b45d146100da578063da997b27146100d5578063e2bc6cca146100d0578063ea89735d146100cb578063f3279e82146100c65763f46f96b2146100c157600080fd5b6112e7565b611256565b61118e565b611063565b610f42565b610e99565b610dda565b610b59565b610a4a565b610994565b610911565b6107a6565b610599565b610475565b610443565b6001600160a01b0381160361011d57565b600080fd5b6004359061012f8261010c565b565b6024359061012f8261010c565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161016757604052565b61013e565b61010081019081106001600160401b0382111761016757604052565b90601f801991011681019081106001600160401b0382111761016757604052565b604051906101e082018281106001600160401b0382111761016757604052565b6040519061012f8261016c565b6001600160401b03811161016757601f01601f191660200190565b81601f8201121561011d57803590610208826101d6565b926102166040519485610188565b8284526020838301011161011d57816000926020809301838601378301015290565b606060031982011261011d576004356102508161010c565b9160243561025d8161010c565b91604435906001600160401b03821161011d5761027c916004016101f1565b90565b60005b8381106102925750506000910152565b8181015183820152602001610282565b906020916102bb8151809281855285808601910161027f565b601f01601f1916010190565b634e487b7160e01b600052602160045260246000fd5b600311156102e757565b6102c7565b9060038210156102e75752565b908082519081815260208091019281808460051b8301019501936000915b8483106103275750505050505090565b9091929394958480610345600193601f198682030187528a516102a2565b9801930193019194939290610317565b805182526020808201516001600160a01b0316908301529061027c906040838101516001600160a01b0316908201526104276104006103b86103a660608701516101e08060608801528601906102a2565b608087015185820360808701526102a2565b60a086015160a085015260c086015160c085015260e086015160e0850152610100808701519085015261012080870151908501526101408087015190858303908601526102a2565b61041361016080870151908501906102ec565b6101808086015190848303908501526102f9565b6101a080850151151590830152926101c0908101511515910152565b3461011d5761047161045d61045736610238565b916120b1565b604051918291602083526020830190610355565b0390f35b3461011d57606036600319011261011d576004356001600160401b0360243581811161011d576104a99036906004016101f1565b9060443590811161011d576104c29036906004016101f1565b60009283916104d383548310611d00565b6105036104f360026104e485610c04565b5001546001600160a01b031690565b6001600160a01b03163314611d43565b600154610520906001600160a01b03165b6001600160a01b031690565b9061052f60026104e485610c04565b9061053e60016104e486610c04565b93833b15610595576105688692604051988997889687956395fdbdfb60e01b875260048701611d8f565b03925af180156105905761057a575080f35b8061058761058d92610154565b80610f37565b80f35b61166e565b8580fd5b3461011d576105a736610238565b60009291835b845481101561079f576105bf81610c04565b506002908101546001600160a01b0386811692918116831480610785575b8061071f575b6105f8575050506105f390611326565b6105ad565b9295509093509161060885610c04565b509361062b61061c600b8097015460ff1690565b610625816102dd565b15611b32565b331461070c575b1633146106c4575b61064383610c04565b50600d9081015460081c60ff1690816106b0575b50610663575b50505080f35b82610694610699926106848561067b6106a898610c04565b50015460ff1690565b61068d816102dd565b1415611bca565b610c04565b5001805460ff19166001179055565b38808061065d565b6106be915061067b85610c04565b38610657565b6107076106d084610c04565b506106ed60016106e5600d8094015460ff1690565b151514611b7e565b6106f685610c04565b5001805461ff001916610100179055565b61063a565b61071a600d61069987610c04565b610632565b5061072984610c04565b5060409081519061077c600a836107486020948583019384910161133a565b039361075c601f1995868101835282610188565b51902093519182019282610770858d6113bd565b03908101835282610188565b519020146105e3565b5061079460016104e486610c04565b8116858216146105dd565b5050505080f35b3461011d576107b436610238565b90600092835b845481101561079f576107cc81610c04565b506002908101546001600160a01b03166001600160a01b039081168482161490816108f5575b508061089b575b8061087b575b610812575061080d90611326565b6107ba565b925061058d935061086c915061084b61082a82610c04565b509361083b600b8096015460ff1690565b610844816102dd565b1415611c5a565b610694600161085d8561067b85610c04565b610866816102dd565b14611cb4565b5001805460ff19166002179055565b508061088b600b61067b85610c04565b610894816102dd565b14156107ff565b506108a582610c04565b506040908151906108ec600a836108c46020948583019384910161133a565b03936108d8601f1995868101835282610188565b51902093519182019282610770858c6113bd565b519020146107f9565b905061090560016104e485610c04565b811690851614386107f2565b3461011d57602061092a61092436610238565b91611dd2565b604051908152f35b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106109665750505050505090565b9091929394958480610984600193603f198682030187528a51610355565b9801930193019194939290610956565b3461011d57602036600319011261011d576004356109b18161010c565b600054906109be82612298565b906000906001600160a01b0390811690825b8581106109e857838552604051806104718782610932565b828260026109f584610c04565b5001541614610a0d575b610a0890611326565b6109d0565b92610a42610a0891610a27610a2187610c04565b50611fc6565b610a3182896122e8565b52610a3c81886122e8565b50611326565b9390506109ff565b3461011d57610a5836610238565b90600092835b845481101561079f57610a7081610c04565b506002908101546001600160a01b03166001600160a01b03908116848216149081610b3d575b5080610b0b575b610ab05750610aab90611326565b610a5e565b925061058d935061086c9150610694610ac882610c04565b5093610adc61061c600b8097015460ff1690565b610afe6001610aee8761067b87610c04565b610af7816102dd565b1415611c16565b6106848561067b85610c04565b50610b1582610c04565b50604090815190610b34600a836108c46020948583019384910161133a565b51902014610a9d565b9050610b4d60016104e485610c04565b81169085161438610a96565b3461011d57602036600319011261011d57600435610b768161010c565b60005490610b8382612298565b906000906001600160a01b0390811690825b858110610bad57838552604051806104718782610932565b82826001610bba84610c04565b5001541614610bd2575b610bcd90611326565b610b95565b92610be6610bcd91610a27610a2187610c04565b939050610bc4565b634e487b7160e01b600052603260045260246000fd5b600054811015610c3e57600e9060008052027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190600090565b610bee565b90600182811c92168015610c73575b6020831014610c5d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c52565b9060405191826000825492610c9184610c43565b908184526001948581169081600014610cfe5750600114610cbb575b505061012f92500383610188565b9093915060005260209081600020936000915b818310610ce657505061012f93508201013880610cad565b85548884018501529485019487945091830191610cce565b91505061012f94506020925060ff191682840152151560051b8201013880610cad565b9992969b9e9d9b610d92610dbc979661012f9f9a936101a09e978e610d73610dd29f989d610d63610dc89f610d84968552602085019060018060a01b03169052565b6001600160a01b03166040830152565b6101c09081606082015201906102a2565b8d810360808f0152906102a2565b9560a08c015260c08b015260e08a01526101008901526101208801528682036101408801526102a2565b986101608501906102ec565b1515610180830152565b019015159052565b3461011d57602036600319011261011d5760043560005481101561011d57610e0190610c04565b50805460018201549091906001600160a01b031660028201546001600160a01b031691610e3060038201610c7d565b93610e3d60048301610c7d565b91600581015460068201546007830154600884015490600985015492600a8601610e6690610c7d565b94600b870154610e769060ff1690565b96600d0154986040519c8d9c8d9c8c60081c60ff169c60ff169b6104719e610d21565b3461011d5760006040366003190112610f3457806024356001600160401b038111610f3157610ecc9036906004016101f1565b6001546001600160a01b031690813b15610f2d578291610f129160405194858094819363cf51b45d60e01b835260043560048401526040602484015260448301906102a2565b03925af1801561059057610f24575080f35b61058d90610154565b5050fd5b50fd5b80fd5b600091031261011d57565b3461011d57600036600319011261011d576002546040516001600160a01b039091168152602090f35b9060028210156102e75752565b80518252602080820151908301526040808201516001600160a01b0390811691840191909152606080830151909116908301529061027c9060e080610ff6610fe4610fd260808801516101008060808901528701906102a2565b60a088015186820360a08801526102a2565b60c087015185820360c08701526102a2565b940151910190610f6b565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106110355750505050505090565b9091929394958480611053600193603f198682030187528a51610f78565b9801930193019194939290611025565b3461011d5760208060031936011261011d57600154604051632cde9bef60e01b815260048035908201526000918290829060249082906001600160a01b03165afa9182156105905780926110c0575b604051806104718582611001565b9091503d8082843e6110d28184610188565b82019183818403126111795780516001600160401b039182821161117557019280601f850112156111715783519161110983611580565b946111176040519687610188565b838652868087019460051b82010194838611610f3457878201945b86861061114c5750505050505050610471915038806110b2565b8551848111611171578991611166878480948801016121b9565b815201950194611132565b8280fd5b8380fd5b5080fd5b90602061027c928181520190610f78565b3461011d57602036600319011261011d5760e06040516111ad8161016c565b600091818380935282602082015282604082015282606082015260606080820152606060a0820152606060c082015201526111f261051460015460018060a01b031690565b60405163ea89735d60e01b81526004803590820152908290829060249082905afa90811561059057826104719392611233575b50506040519182918261117d565b61124f92503d8091833e6112478183610188565b810190612273565b3880611225565b3461011d5761012036600319011261011d57611270610122565b611278610131565b6001600160401b03919060443583811161011d5761129a9036906004016101f1565b60643584811161011d576112b29036906004016101f1565b916101043594851161011d576112cf6112e59536906004016101f1565b9360e4359360c4359360a435936084359361175c565b005b3461011d57600036600319011261011d576001546040516001600160a01b039091168152602090f35b634e487b7160e01b600052601160045260246000fd5b60001981146113355760010190565b611310565b60009291815461134981610c43565b926001918083169081156113a25750600114611366575b50505050565b90919293945060005260209081600020906000915b8583106113915750505050019038808080611360565b80548584015291830191810161137b565b60ff1916845250505081151590910201915038808080611360565b906113d06020928281519485920161027f565b0190565b9062278d009182810292818404149015171561133557565b9190820180921161133557565b600054600160401b811015610167576001810180600055811015610c3e57600e9060008052027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630190600090565b60001981019190821161133557565b818110611461575050565b60008155600101611456565b9190601f811161147c57505050565b61012f926000526020600020906020601f840160051c830193106114a8575b601f0160051c0190611456565b909150819061149b565b91909182516001600160401b038111610167576114d9816114d38454610c43565b8461146d565b602080601f831160011461151557508192939460009261150a575b50508160011b916000199060031b1c1916179055565b0151905038806114f4565b90601f1983169561152b85600052602060002090565b926000905b8882106115685750508360019596971061154f575b505050811b019055565b015160001960f88460031b161c19169055388080611545565b80600185968294968601518155019501930190611530565b6001600160401b0381116101675760051b60200190565b81601f8201121561011d5780516115ad816101d6565b926115bb6040519485610188565b8184526020828401011161011d5761027c916020808501910161027f565b90602090818382031261011d5782516001600160401b039384821161011d570181601f8201121561011d57805161160f81611580565b9461161d6040519687610188565b818652848087019260051b8401019380851161011d57858401925b858410611649575050505050505090565b835183811161011d578791611663848480948a0101611597565b815201930192611638565b6040513d6000823e3d90fd5b815191600160401b83116101675781548383558084106116d8575b506116aa602080920192600052602060002090565b6000925b8484106116bc575050505050565b600183826116cc839451866114b2565b019201930192906116ae565b6000838152846020822092830192015b8281106116f6575050611695565b8061170360019254610c43565b80611710575b50016116e8565b601f9081811184146117285750508281555b38611709565b8361174a9261173c85600052602060002090565b920160051c82019101611456565b60008181526020812081835555611722565b9297919760005b6000548110156119f85761177681610c04565b506001908101546001600160a01b03918783169183168214806119de575b80611983575b80611965575b611920576105146117b4916104e486610c04565b149081611904575b50806118aa575b8061188a575b6117db576117d690611326565b611763565b97959250505061012f965061183594915061182f9260056117fb88610c04565b500155600661180987610c04565b50015580600761181887610c04565b50015582600861182787610c04565b5001556113d4565b906113ec565b600961184083610c04565b50015561185d600b61185183610c04565b5001805460ff19169055565b61187d61186982610c04565b50600d908101805460ff1916905591610c04565b5001805461ff0019169055565b50600261189b600b61067b84610c04565b6118a4816102dd565b146117c9565b506118b481610c04565b506040908151906118fb600a836118d36020948583019384910161133a565b03936118e7601f1995868101835282610188565b51902093519182019282610770858b6113bd565b519020146117c3565b905061191460026104e484610c04565b811690841614386117bc565b60405162461bcd60e51b815260206004820181905260248201527f53696d696c617220636f6e747261637420616c72656164792070656e64696e676044820152606490fd5b50611974600b61067b86610c04565b61197d816102dd565b156117a0565b5061198d84610c04565b50876107706119d5604093845190600a826119b06020938483019384910161133a565b03926119c4601f1994858101835282610188565b5190209551938491820180966113bd565b5190201461179a565b506119ed60026104e486610c04565b831686841614611794565b509196959493929790611a096113f9565b5098600054611a1790611447565b8a5560018a0180546001600160a01b0319166001600160a01b039092169190911790556002890180546001600160a01b0319166001600160a01b03909216919091179055611a6890600389016114b2565b611a7590600488016114b2565b60058601556006850155806007850155816008850155611a94906113d4565b611a9d916113ec565b6009830155611aaf90600a83016114b2565b600b8101805460ff19169055600d8101805461ffff1916905560025460405163c6418ab960e01b81529190829081906001600160a01b03165a92600491600094fa9081156105905761012f92600092611b0c575b50600c0161167a565b611b2b90600c92933d8091833e611b238183610188565b8101906115d9565b9190611b03565b15611b3957565b60405162461bcd60e51b815260206004820152601860248201527f41677265656d656e74206973206e6f742070656e64696e6700000000000000006044820152606490fd5b15611b8557565b60405162461bcd60e51b815260206004820152601b60248201527f54656e616e7420686173206e6f7420417070726f7665642079657400000000006044820152606490fd5b15611bd157565b60405162461bcd60e51b815260206004820152601760248201527f41677265656d656e74206973207465726d696e617465640000000000000000006044820152606490fd5b15611c1d57565b60405162461bcd60e51b81526020600482015260156024820152741059dc99595b595b9d081a5cc8185c1c1c9bdd9959605a1b6044820152606490fd5b15611c6157565b60405162461bcd60e51b815260206004820152602560248201527f41677265656d656e742068617320616c7265616479206265656e207465726d696044820152641b985d195960da1b6064820152608490fd5b15611cbb57565b60405162461bcd60e51b815260206004820152601760248201527f41677265656d656e74206973206e6f74204163746976650000000000000000006044820152606490fd5b15611d0757565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081859dc99595b595b9d08125160621b6044820152606490fd5b15611d4a57565b60405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792074656e616e742063616e20726169736520612064697370757465006044820152606490fd5b9081526001600160a01b0391821660208201529116604082015260a06060820181905261027c939192611dc4918401906102a2565b9160808184039101526102a2565b90916000928354935b848110611e1c5760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b6044820152606490fd5b611e2a60026104e483610c04565b6001600160a01b03908116858216149081611ec6575b5080611e6c575b611e5957611e5490611326565b611ddb565b92505050611e679150610c04565b505490565b50611e7681610c04565b50604090815190611ebd600a83611e956020948583019384910161133a565b0393611ea9601f1995868101835282610188565b51902093519182019282610770858a6113bd565b51902014611e47565b9050611ed660016104e484610c04565b81169083161438611e40565b604051906101e082018281106001600160401b0382111761016757604052816101c0600091828152826020820152826040820152606080820152606060808201528260a08201528260c08201528260e082015282610100820152826101208201526060610140820152826101608201526060610180820152826101a08201520152565b60038210156102e75752565b908154611f7d81611580565b92611f8b6040519485610188565b818452600090815260208082208186015b848410611faa575050505050565b6001838192611fb885610c7d565b815201920193019290611f9c565b9061012f60ff600d611fd66101a9565b8554815260018601546001600160a01b031660208201529460028101546001600160a01b0316604087015261200d60038201610c7d565b606087015261201e60048201610c7d565b6080870152600581015460a0870152600681015460c0870152600781015460e087015260088101546101008701526009810154610120870152612063600a8201610c7d565b61014087015261208461207a600b83015460ff1690565b6101608801611f65565b612090600c8201611f71565b610180870152015481811615156101a086015260081c1615156101c0840152565b90916120bb611ee2565b506000928354935b8481106121045760405162461bcd60e51b815260206004820152601260248201527110dbdb9d1c9858dd081b9bdd08199bdd5b9960721b6044820152606490fd5b61211260026104e483610c04565b6001600160a01b03908116858216149081612185575b5080612153575b6121415761213c90611326565b6120c3565b91505061027c9250610a219150610c04565b5061215d81610c04565b5060409081519061217c600a83611e956020948583019384910161133a565b5190201461212f565b905061219560016104e484610c04565b81169083161438612128565b519061012f8261010c565b5190600282101561011d57565b9190916101008184031261011d576121cf6101c9565b9281518452602082015160208501526121ea604083016121a1565b60408501526121fb606083016121a1565b60608501526080820151916001600160401b039283811161011d5782612222918301611597565b608086015260a081015183811161011d578261223f918301611597565b60a086015260c081015192831161011d5761226160e09261226c948301611597565b60c0860152016121ac565b60e0830152565b9060208282031261011d5781516001600160401b03811161011d5761027c92016121b9565b906122a282611580565b6122af6040519182610188565b82815280926122c0601f1991611580565b019060005b8281106122d157505050565b6020906122dc611ee2565b828285010152016122c5565b8051821015610c3e5760209160051b01019056fea264697066735822122015e4e8cabfdb10fd75c470307604007b1a25c76ba7618a9b1cdfa58fae25594c64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "130:13115:0:-:0;;;;;;;;;;;;;-1:-1:-1;;130:13115:0;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:44;130:13115;;;1060:44;130:13115;;;;;;;;;;;-1:-1:-1;130:13115:0;;;;;;-1:-1:-1;130:13115:0;;;;;-1:-1:-1;130:13115:0",
  "deployedSourceMap": "130:13115:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;130:13115:0;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;130:13115:0;;;;;;-1:-1:-1;;130:13115:0;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;130:13115:0;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;-1:-1:-1;;130:13115:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;130:13115:0;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;130:13115:0;;;:::o;:::-;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;130:13115:0;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;130:13115:0;;;7918:71;130:13115;;7926:38;;7918:71;:::i;:::-;8000:132;130:13115;8022:37;:30;;;:::i;:::-;-1:-1:-1;8022:37:0;130:13115;-1:-1:-1;;;;;130:13115:0;;;;-1:-1:-1;;;;;130:13115:0;8063:10;8022:51;8000:132;:::i;:::-;130:13115;;8145:38;;-1:-1:-1;;;;;130:13115:0;;-1:-1:-1;;;;;130:13115:0;;;8145:38;8225:30;130:13115;8022:37;8225:30;;;:::i;130:13115::-;8277:30;130:13115;;8277:30;;;:::i;130:13115::-;8145:225;;;;;;;130:13115;;;;;;;;;;;;;;8145:225;;130:13115;8145:225;;;:::i;:::-;;;;;;;;;;;130:13115;;;8145:225;;;;;;:::i;:::-;;;:::i;:::-;130:13115;;8145:225;;:::i;:::-;130:13115;;;;;;;;;;:::i;:::-;4280:1;4271:10;;;4312:3;130:13115;;4283:27;;;;;4346:19;;;:::i;:::-;-1:-1:-1;4346:26:0;;;;130:13115;-1:-1:-1;;;;;130:13115:0;;;;4346:26;130:13115;;4346:37;;;:95;;4312:3;4346:215;;;4312:3;4328:1252;;4312:3;;;;;;:::i;:::-;4271:10;;4328:1252;4614:19;;-1:-1:-1;4614:19:0;;-1:-1:-1;4614:19:0;;;;:::i;:::-;:26;;4588:139;130:13115;4614:26;;;;130:13115;;;;;;;;;:::i;:::-;4614:53;4588:139;:::i;:::-;4748:10;:21;4744:103;;4328:1252;130:13115;4748:10;4867:23;4863:269;;4328:1252;5152:19;;;:::i;:::-;-1:-1:-1;5152:36:0;;;;130:13115;;;;;5152:74;;;;4328:1252;5148:401;;;4328:1252;5563:5;;;130:13115;;5148:401;5338:19;5308:153;5482:19;5338;130:13115;5338:19;;5482:51;5338:19;;:::i;:::-;:26;;130:13115;;;;;;;;;:::i;:::-;5338:56;;5308:153;:::i;:::-;5482:19;:::i;:::-;-1:-1:-1;5482:26:0;130:13115;;-1:-1:-1;;130:13115:0;5511:22;130:13115;;;;5482:51;5148:401;;;;;5152:74;130:13115;5192:19;;;;;:::i;130:13115::-;5152:74;;;4863:269;5073:43;4941:19;;;:::i;:::-;:34;4911:143;130:13115;;4941:34;;;;130:13115;;;;;;;;4941:42;4911:143;:::i;:::-;5073:19;;;:::i;:::-;-1:-1:-1;5073:36:0;130:13115;;-1:-1:-1;;130:13115:0;;;;;;5073:43;4863:269;;4744:103;4790:41;:34;:19;;;:::i;:41::-;4744:103;;4346:215;4485:19;;;;:::i;:::-;130:13115;;;;;4468:48;4531:29;4485:30;4468:48;130:13115;4468:48;;;;;4485:30;;;;130:13115;:::i;:::-;4468:48;130:13115;4468:48;130:13115;;4468:48;;;;;;;;:::i;:::-;130:13115;4458:59;;130:13115;;4531:29;;;130:13115;;;;;;:::i;:::-;4531:29;;;;;;;;:::i;:::-;130:13115;4521:40;;4458:103;4346:215;;:95;4400:19;130:13115;;4400:19;;;:::i;130:13115::-;;;;;;4400:41;4346:95;;4283:27;;;;;130:13115;;;;;;;;;:::i;:::-;6801:10;6810:1;6801:10;;6842:3;130:13115;;6813:27;;;;;6884:19;;;:::i;:::-;-1:-1:-1;6884:26:0;;;;130:13115;-1:-1:-1;;;;;130:13115:0;-1:-1:-1;;;;;130:13115:0;;;;;;6884:37;;;:99;;6842:3;6884:223;;;;6842:3;6884:300;;;6842:3;6862:801;;6842:3;;;;:::i;:::-;6801:10;;6862:801;7244:19;;7568:55;7244:19;;7568;7244;;7214:167;7244:19;;;:::i;:::-;:26;;130:13115;7244:26;;;;130:13115;;;;;;;;;:::i;:::-;7244:56;;7214:167;:::i;:::-;7400:149;130:13115;;7430:19;;;;:::i;130:13115::-;;;;:::i;:::-;7430:52;7400:149;:::i;7568:19::-;-1:-1:-1;7568:26:0;130:13115;;-1:-1:-1;;130:13115:0;6884:26;130:13115;;;;6884:300;7128:19;;130:13115;7128:26;:19;;;:::i;130:13115::-;;;;:::i;:::-;7128:56;;6884:300;;:223;7031:19;;;;:::i;:::-;130:13115;;;;;7014:48;7077:29;7031:30;7014:48;130:13115;7014:48;;;;;7031:30;;;;130:13115;:::i;:::-;7014:48;130:13115;7014:48;130:13115;;7014:48;;;;;;;;:::i;:::-;130:13115;7004:59;;130:13115;;7077:29;;;130:13115;;;;;;:::i;7077:29::-;130:13115;7067:40;;7004:103;6884:223;;:99;6942:19;;130:13115;;6942:19;;;:::i;130:13115::-;;;;;;6942:41;6884:99;;;130:13115;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;130:13115:0;;;;;;;;;:::i;:::-;-1:-1:-1;130:13115:0;11082:39;;;;:::i;:::-;11128:19;-1:-1:-1;;;;;;;130:13115:0;;;;-1:-1:-1;11176:27:0;;;;;;11435:50;;;130:13115;;;;11435:50;130:13115;;:::i;11205:3::-;11225:19;;:26;:19;;;:::i;:::-;:26;;130:13115;;11225:44;11221:138;;11205:3;;;;:::i;:::-;11161:13;;11221:138;11304:19;11338:9;11205:3;11304:19;130:13115;11304:19;;;:::i;:::-;130:13115;;:::i;:::-;11286:37;;;;:::i;:::-;;;;;;:::i;:::-;;11338:9;:::i;:::-;11221:138;;;;;130:13115;;;;;;;:::i;:::-;5715:10;5724:1;5715:10;;5756:3;130:13115;;5727:27;;;;;5798:19;;;:::i;:::-;-1:-1:-1;5798:26:0;;;;130:13115;-1:-1:-1;;;;;130:13115:0;-1:-1:-1;;;;;130:13115:0;;;;;;5798:37;;;:99;;5756:3;5798:223;;;;5756:3;5776:883;;5756:3;;;;:::i;:::-;5715:10;;5776:883;6086:19;;6564:55;6086:19;;6564;6086;;6392:153;6086:19;;;:::i;:::-;:26;;6056:151;130:13115;6086:26;;;;130:13115;;;;;6056:151;6226:147;130:13115;;6256:19;;;;:::i;130:13115::-;;;;:::i;:::-;6256:52;;6226:147;:::i;:::-;130:13115;6422:19;;;;:::i;5798:223::-;5945:19;;;;:::i;:::-;130:13115;;;;;5928:48;5991:29;5945:30;5928:48;130:13115;5928:48;;;;;5945:30;;;;130:13115;:::i;5991:29::-;130:13115;5981:40;;5918:103;5798:223;;:99;5856:19;;130:13115;;5856:19;;;:::i;130:13115::-;;;;;;5856:41;5798:99;;;130:13115;;;;;;-1:-1:-1;;130:13115:0;;;;;;;;;:::i;:::-;-1:-1:-1;130:13115:0;10517:39;;;;:::i;:::-;10563:19;-1:-1:-1;;;;;;;130:13115:0;;;;-1:-1:-1;10611:27:0;;;;;;10874:50;;;130:13115;;;;10874:50;130:13115;;:::i;10640:3::-;10660:19;;130:13115;10660:19;;;:::i;:::-;:28;;130:13115;;10660:48;10656:142;;10640:3;;;;:::i;:::-;10596:13;;10656:142;10743:19;10777:9;10640:3;10743:19;130:13115;10743:19;;;:::i;10777:9::-;10656:142;;;;;130:13115;;;;;;;;;;;;;7941:16;130:13115;;;;;;;;7941:16;130:13115;;;;;;7941:16;130:13115;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;130:13115:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;130:13115:0;;;;-1:-1:-1;130:13115:0;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;130:13115:0;;;;;;-1:-1:-1;130:13115:0;743:34;;;;;;;;:::i;:::-;-1:-1:-1;130:13115:0;;743:34;;;130:13115;;;;-1:-1:-1;;;;;130:13115:0;743:34;;;130:13115;-1:-1:-1;;;;;130:13115:0;743:34;;130:13115;743:34;;;:::i;:::-;;;130:13115;743:34;;;:::i;:::-;;;;;130:13115;743:34;;;130:13115;743:34;;;130:13115;743:34;;;130:13115;743:34;;;;130:13115;743:34;;;;;;;:::i;:::-;;;;;130:13115;;;;;;;;743:34;;;130:13115;;;;;;;;;;743:34;130:13115;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;130:13115:0;;-1:-1:-1;;130:13115:0;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;130:13115:0;;8502:65;;;;;130:13115;;;;;;;;;;;;;;;8502:65;;130:13115;;;8502:65;;130:13115;;;;;;;;;;;:::i;:::-;8502:65;;;;;;;;;;130:13115;;;8502:65;;;;:::i;:::-;130:13115;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;130:13115:0;;;;841:40;130:13115;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10307:63:0;;130:13115;;;10307:63;;;130:13115;-1:-1:-1;;;;130:13115:0;;;;;;-1:-1:-1;;;;;130:13115:0;10307:63;;;;;;;;;;;130:13115;;;;;;;;:::i;10307:63::-;;;;;;;;;;;;;:::i;:::-;;;130:13115;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10307:63;;;;;;;130:13115;10307:63;;;;;;130:13115;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;130:13115:0;;;;;;;;;;:::i;:::-;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10097:43;130:13115;10097:25;130:13115;;;;;;;;;10097:43;130:13115;;-1:-1:-1;;;10097:55:0;;130:13115;;;10097:55;;;130:13115;;;;;;;;;;10097:55;;;;;;;;130:13115;10097:55;;;;130:13115;;;;;;;;;;:::i;10097:55::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;130:13115;;;;;;-1:-1:-1;;130:13115:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;130:13115:0;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;130:13115:0;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;130:13115:0;;;;-1:-1:-1;130:13115:0;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;130:13115:0;;;-1:-1:-1;;;130:13115:0;;;;;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;2814:7;130:13115;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;1661:1;130:13115;-1:-1:-1;;;130:13115:0;;;;;;;;;1661:1;130:13115;;;;;;;;1661:1;130:13115;;;;;;1661:1;130:13115;:::o;:::-;-1:-1:-1;;130:13115:0;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;130:13115:0;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;130:13115:0;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1206:2951;;;;;1661:1;1693:3;1661:1;130:13115;1664:27;;;;;1735:19;;;:::i;:::-;-1:-1:-1;1735:28:0;;;;130:13115;-1:-1:-1;;;;;130:13115:0;;;;;;;1735:41;;;:99;;1693:3;1735:223;;;1693:3;1735:297;;;1693:3;1713:412;;130:13115;2157:41;:19;;;;:::i;:41::-;;:99;;;;1693:3;2157:223;;;;1693:3;2157:300;;;1693:3;2153:921;;1693:3;;;:::i;:::-;1652:10;;2153:921;2479:19;;;;;;2973:44;2479:19;;2783:39;2479:19;;;2797:24;2479:19;:30;:19;;;:::i;:::-;:30;;130:13115;2542:35;:19;;;:::i;:::-;:35;;130:13115;2615:19;:33;:19;;;:::i;:::-;:33;;130:13115;2684:19;:29;:19;;;:::i;:::-;:29;;130:13115;2797:24;:::i;:::-;2783:39;;:::i;:::-;2745:35;:19;;;:::i;:::-;:35;;130:13115;2841:52;:26;:19;;;:::i;:::-;-1:-1:-1;2841:26:0;130:13115;;-1:-1:-1;;130:13115:0;;;;2841:52;2973:19;2912;;;:::i;:::-;-1:-1:-1;2912:34:0;;;;130:13115;;-1:-1:-1;;130:13115:0;;;2912:34;5482:19;:::i;2973:::-;-1:-1:-1;2973:36:0;130:13115;;-1:-1:-1;;130:13115:0;;;;2157:300;2401:19;2431:26;130:13115;2401:26;:19;;;:::i;130:13115::-;;;;:::i;:::-;2401:56;2157:300;;:223;2304:19;;;;:::i;:::-;130:13115;;;;;2287:48;2350:29;2304:30;2287:48;130:13115;2287:48;;;;;2304:30;;;;130:13115;:::i;:::-;2287:48;130:13115;2287:48;130:13115;;2287:48;;;;;;;;:::i;:::-;130:13115;2277:59;;130:13115;;2350:29;;;130:13115;;;;;;:::i;2350:29::-;130:13115;2340:40;;2277:103;2157:223;;:99;2219:19;;130:13115;2219:26;:19;;;:::i;130:13115::-;;;;;;2219:37;2157:99;;;1713:412;130:13115;;-1:-1:-1;;;2067:42:0;;130:13115;2067:42;;;130:13115;;;;;;;;;;;;;;2067:42;1735:297;1979:19;130:13115;1979:26;:19;;;:::i;130:13115::-;;;;:::i;:::-;1979:53;1735:297;;:223;1882:19;;;;:::i;:::-;130:13115;;;1928:29;130:13115;;;;1865:48;1882:30;1865:48;130:13115;1865:48;;;;;1882:30;;;;130:13115;:::i;:::-;1865:48;130:13115;1865:48;130:13115;;1865:48;;;;;;;;:::i;:::-;130:13115;1855:59;;130:13115;;1928:29;;;;;130:13115;;;:::i;1928:29::-;130:13115;1918:40;;1855:103;1735:223;;:99;1797:19;130:13115;1797:26;:19;;;:::i;130:13115::-;;;;;;1797:37;1735:99;;1664:27;;;;;;;;;;3129:23;;:::i;:::-;130:13115;;1661:1;130:13115;3232:27;;;:::i;:::-;130:13115;;1735:28;3270:21;;130:13115;;-1:-1:-1;;;;;;130:13115:0;-1:-1:-1;;;;;130:13115:0;;;;;;;;;3314:19;;;130:13115;;-1:-1:-1;;;;;;130:13115:0;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;3354:29;;;130:13115;:::i;:::-;;;3441:27;;;130:13115;:::i;:::-;3526:23;;;130:13115;3574:28;;;130:13115;3632:26;;;;130:13115;3686:22;;;;130:13115;3777:24;;;:::i;:::-;3763:39;;;:::i;:::-;3732:28;;;130:13115;;;3813:23;;;130:13115;:::i;:::-;3883:19;;;130:13115;;-1:-1:-1;;130:13115:0;;;3939:27;;;130:13115;;-1:-1:-1;;130:13115:0;;;3314:19;130:13115;;;-1:-1:-1;;;4111:38:0;;130:13115;3883:19;130:13115;;;;-1:-1:-1;;;;;130:13115:0;4111:38;;3441:27;4111:38;1661:1;4111:38;;;;;;;130:13115;4111:38;1661:1;4111:38;;;1647:1438;4090:18;;;130:13115;:::i;4111:38::-;;;4090:18;4111:38;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;130:13115;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;8711:611::-;;;130:13115;;;;8874:402;8891:27;;;;;;130:13115;;-1:-1:-1;;;9286:28:0;;130:13115;9286:28;;;130:13115;;;;;;-1:-1:-1;;;130:13115:0;;;;;;2067:42;8920:3;130:13115;8962:26;:19;;;:::i;130:13115::-;-1:-1:-1;;;;;130:13115:0;;;;;;8962:37;;;:99;;8920:3;8962:223;;;;8920:3;8940:325;;8920:3;;;:::i;:::-;8879:10;;8940:325;9227:19;;;;;;;;:::i;:::-;130:13115;;9220:29;:::o;8962:223::-;9109:19;;;;:::i;:::-;130:13115;;;;;9092:48;9155:29;9109:30;9092:48;130:13115;9092:48;;;;;9109:30;;;;130:13115;:::i;:::-;9092:48;130:13115;9092:48;130:13115;;9092:48;;;;;;;;:::i;:::-;130:13115;9082:59;;130:13115;;9155:29;;;130:13115;;;;;;:::i;9155:29::-;130:13115;9145:40;;9082:103;8962:223;;:99;9020:19;;130:13115;;9020:19;;;:::i;130:13115::-;;;;;;9020:41;8962:99;;;130:13115;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;130:13115:0;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;9330:621;;;130:13115;;:::i;:::-;9511:10;9520:1;130:13115;;;9506:399;9523:27;;;;;;130:13115;;-1:-1:-1;;;9915:28:0;;130:13115;9915:28;;;130:13115;;;;;;-1:-1:-1;;;130:13115:0;;;;;;2067:42;9552:3;130:13115;9594:26;:19;;;:::i;130:13115::-;-1:-1:-1;;;;;130:13115:0;;;;;;9594:37;;;:99;;9552:3;9594:223;;;;9552:3;9572:322;;9552:3;;;:::i;:::-;9511:10;;9572:322;9859:19;;;130:13115;9859:19;;;;;;:::i;9594:223::-;9741:19;;;;:::i;:::-;130:13115;;;;;9724:48;9787:29;9741:30;9724:48;130:13115;9724:48;;;;;9741:30;;;;130:13115;:::i;9787:29::-;130:13115;9777:40;;9714:103;9594:223;;:99;9652:19;;130:13115;;9652:19;;;:::i;130:13115::-;;;;;;9652:41;9594:99;;;130:13115;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;130:13115:0;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;130:13115:0;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"./DisputeResolution.sol\";\r\nimport \"./DefaultTerms.sol\";\r\n\r\n\r\ncontract AgreementFactory {\r\n\r\n    enum AgreementStatus {\r\n        Pending,\r\n        Active,\r\n        Terminated\r\n    }\r\n\r\nstruct Contract {\r\n    uint256 ID;\r\n    address landlord;\r\n    address tenant;\r\n    string landlordUsername;  // New field for landlord's username\r\n    string tenantUsername;    // New field for tenant's username\r\n    uint256 rentAmount;\r\n    uint256 securityDeposit;\r\n    uint256 leaseDuration;\r\n    uint256 startDate;\r\n    uint256 terminationDate;\r\n    string propertyID;\r\n    AgreementStatus status;\r\n    string[] terms;\r\n    bool tenantApproved;\r\n    bool landlordApproved;\r\n}\r\n\r\n\r\n    Contract[] public contractRegistry;\r\n    DisputeResolution public disputeResolutionContract;\r\n    DefaultTerms public defaultTermsContract;\r\n\r\n    constructor(DisputeResolution _disputeResolutionContract, DefaultTerms _defaultTermsContract) {\r\n        disputeResolutionContract = _disputeResolutionContract;\r\n        defaultTermsContract = _defaultTermsContract;\r\n    }\r\n\r\n        // ********************************************** Basic Contract Functions\r\n\r\n    function createRentalAgreement(\r\n        address _landlord,\r\n        address _tenant,\r\n        string memory _landlordUsername,\r\n        string memory _tenantUsername,\r\n        uint256 _rentAmount,\r\n        uint256 _securityDeposit,\r\n        uint256 _leaseDuration,\r\n        uint256 _startDate,\r\n        string memory _propertyID\r\n    ) external {\r\n        // Check if a similar contract already exists and is in a \"Pending\" status\r\n        for (uint i = 0; i < contractRegistry.length; i++) {\r\n            if (\r\n                contractRegistry[i].landlord == _landlord &&\r\n                contractRegistry[i].tenant == _tenant &&\r\n                keccak256(abi.encodePacked(contractRegistry[i].propertyID)) == keccak256(abi.encodePacked(_propertyID)) &&\r\n                contractRegistry[i].status == AgreementStatus.Pending\r\n            ) {\r\n                revert(\"Similar contract already pending\");\r\n            }\r\n            \r\n            if (contractRegistry[i].landlord == _landlord &&\r\n                contractRegistry[i].tenant == _tenant &&\r\n                keccak256(abi.encodePacked(contractRegistry[i].propertyID)) == keccak256(abi.encodePacked(_propertyID)) &&\r\n                contractRegistry[i].status == AgreementStatus.Terminated){\r\n\r\n                contractRegistry[i].rentAmount = _rentAmount;\r\n                contractRegistry[i].securityDeposit = _securityDeposit;\r\n                contractRegistry[i].leaseDuration = _leaseDuration;\r\n                contractRegistry[i].startDate = _startDate;\r\n                contractRegistry[i].terminationDate = _startDate + (_leaseDuration * 30 days);\r\n                contractRegistry[i].status = AgreementStatus.Pending;\r\n                contractRegistry[i].tenantApproved = false;\r\n                contractRegistry[i].landlordApproved = false;                \r\n                return;\r\n            }\r\n        }\r\n\r\n        Contract storage newAgreement = contractRegistry.push(); // Use 'storage' to directly modify state variable\r\n        newAgreement.ID = contractRegistry.length - 1;\r\n        newAgreement.landlord = _landlord;\r\n        newAgreement.tenant = _tenant;\r\n        newAgreement.landlordUsername = _landlordUsername; // Set landlord's username\r\n        newAgreement.tenantUsername = _tenantUsername;     // Set tenant's username\r\n        newAgreement.rentAmount = _rentAmount;\r\n        newAgreement.securityDeposit = _securityDeposit;\r\n        newAgreement.leaseDuration = _leaseDuration;\r\n        newAgreement.startDate = _startDate;\r\n        newAgreement.terminationDate = _startDate + (_leaseDuration * 30 days);\r\n        newAgreement.propertyID = _propertyID; // Set the propertyID\r\n        newAgreement.status = AgreementStatus.Pending;\r\n        newAgreement.tenantApproved = false;\r\n        newAgreement.landlordApproved = false;\r\n        // Get default terms from DefaultTerms contract\r\n        newAgreement.terms = defaultTermsContract.getDefaultTerms();\r\n    }\r\n\r\nfunction approveAgreement(address _tenant, address _landlord, string memory _propertyID) external {\r\n    for (uint i = 0; i < contractRegistry.length; i++) {\r\n        if (\r\n            contractRegistry[i].tenant == _tenant &&\r\n            contractRegistry[i].landlord == _landlord &&\r\n            keccak256(abi.encodePacked(contractRegistry[i].propertyID)) == keccak256(abi.encodePacked(_propertyID))\r\n        ) {\r\n            require(\r\n                contractRegistry[i].status == AgreementStatus.Pending,\r\n                \"Agreement is not pending\"\r\n            );\r\n\r\n            if (msg.sender == _tenant) {\r\n                contractRegistry[i].tenantApproved = true;\r\n            }\r\n\r\n            if (msg.sender == _landlord) {\r\n                require(\r\n                    contractRegistry[i].tenantApproved == true,\r\n                    \"Tenant has not Approved yet\"\r\n                );\r\n                contractRegistry[i].landlordApproved = true;\r\n            }\r\n\r\n            if (contractRegistry[i].landlordApproved && contractRegistry[i].tenantApproved) {\r\n                // Check if the agreement is not terminated\r\n                require(\r\n                    contractRegistry[i].status != AgreementStatus.Terminated,\r\n                    \"Agreement is terminated\"\r\n                );\r\n\r\n                contractRegistry[i].status = AgreementStatus.Active;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n    function disapproveAgreement(address _tenant, address _landlord, string memory _propertyID) external {\r\n        for (uint i = 0; i < contractRegistry.length; i++) {\r\n            if (\r\n                contractRegistry[i].tenant == _tenant &&\r\n                contractRegistry[i].landlord == _landlord &&\r\n                keccak256(abi.encodePacked(contractRegistry[i].propertyID)) == keccak256(abi.encodePacked(_propertyID))\r\n            ) {\r\n                require(\r\n                    contractRegistry[i].status == AgreementStatus.Pending,\r\n                    \"Agreement is not pending\"\r\n                );\r\n                require(\r\n                    contractRegistry[i].status != AgreementStatus.Active,\r\n                    \"Agreement is approved\"\r\n                );\r\n                require(\r\n                    contractRegistry[i].status != AgreementStatus.Terminated,\r\n                    \"Agreement is terminated\"\r\n                );\r\n                contractRegistry[i].status = AgreementStatus.Terminated;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function terminateAgreement(address _tenant, address _landlord, string memory _propertyID) external {\r\n        for (uint i = 0; i < contractRegistry.length; i++) {\r\n            if (\r\n                contractRegistry[i].tenant == _tenant &&\r\n                contractRegistry[i].landlord == _landlord &&\r\n                keccak256(abi.encodePacked(contractRegistry[i].propertyID)) == keccak256(abi.encodePacked(_propertyID)) &&\r\n                contractRegistry[i].status != AgreementStatus.Terminated\r\n       ) {\r\n                require(\r\n                    contractRegistry[i].status != AgreementStatus.Terminated,\r\n                    \"Agreement has already been terminated\"\r\n                );\r\n                require(\r\n                    contractRegistry[i].status == AgreementStatus.Active,\r\n                    \"Agreement is not Active\"\r\n                );\r\n                contractRegistry[i].status = AgreementStatus.Terminated;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // ********************************************** Dispute Resolution Functions\r\n\r\n    function raiseDispute(\r\n        uint256 _agreementID,\r\n        string memory _title,\r\n        string memory _reason\r\n    ) external {\r\n        require(_agreementID < contractRegistry.length, \"Invalid agreement ID\");\r\n        require(\r\n            contractRegistry[_agreementID].tenant == msg.sender,\r\n            \"Only tenant can raise a dispute\"\r\n        );\r\n\r\n        disputeResolutionContract.raiseDispute(\r\n            _agreementID,\r\n            contractRegistry[_agreementID].tenant,\r\n            contractRegistry[_agreementID].landlord,\r\n            _title,\r\n            _reason\r\n        );\r\n    }\r\n\r\n    function resolveDispute(\r\n        uint256 _disputeID,\r\n        string memory _resolution\r\n    ) external {\r\n        disputeResolutionContract.resolveDispute(_disputeID, _resolution);\r\n    }\r\n\r\n    // ********************************************** Getter Functions\r\n\r\n    // Getter function for contractRegistry length\r\n\r\n    function getContractID(\r\n        address _tenant,\r\n        address _landlord,\r\n        string memory _propertyID\r\n    ) external view returns (uint256) {\r\n        for (uint i = 0; i < contractRegistry.length; i++) {\r\n            if (\r\n                contractRegistry[i].tenant == _tenant &&\r\n                contractRegistry[i].landlord == _landlord &&\r\n                keccak256(abi.encodePacked(contractRegistry[i].propertyID)) == keccak256(abi.encodePacked(_propertyID))\r\n            ) {\r\n                return contractRegistry[i].ID;\r\n            }\r\n        }\r\n        revert(\"Contract not found\");\r\n    }\r\n\r\n    function getContractDetails(\r\n        address _tenant,\r\n        address _landlord,\r\n        string memory _propertyID\r\n    ) external view returns (Contract memory) {\r\n        for (uint i = 0; i < contractRegistry.length; i++) {\r\n            if (\r\n                contractRegistry[i].tenant == _tenant &&\r\n                contractRegistry[i].landlord == _landlord &&\r\n                keccak256(abi.encodePacked(contractRegistry[i].propertyID)) == keccak256(abi.encodePacked(_propertyID))\r\n            ) {\r\n                return contractRegistry[i];\r\n            }\r\n        }\r\n        revert(\"Contract not found\");\r\n    }\r\n\r\n    function getDisputeDetails(\r\n        uint256 _disputeID\r\n    ) external view returns (DisputeResolution.Dispute memory) {\r\n        return disputeResolutionContract.getDisputeDetails(_disputeID);\r\n    }\r\n\r\n    function getAllDisputes(\r\n        uint256 _agreementID\r\n    ) external view returns (DisputeResolution.Dispute[] memory) {\r\n        return disputeResolutionContract.getDisputesForAgreement(_agreementID);\r\n    }\r\n\r\n\r\nfunction getLandlordsContracts(address _landlordAddress) external view returns (Contract[] memory) {\r\n    Contract[] memory result = new Contract[](contractRegistry.length);\r\n    uint256 counter = 0;\r\n\r\n    for (uint256 i = 0; i < contractRegistry.length; i++) {\r\n        if (contractRegistry[i].landlord == _landlordAddress) {\r\n            result[counter] = contractRegistry[i];\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    // Resize the result array to remove any empty elements\r\n    assembly {\r\n        mstore(result, counter)\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getTenantsContracts(address _tenantAddress) external view returns (Contract[] memory) {\r\n    Contract[] memory result = new Contract[](contractRegistry.length);\r\n    uint256 counter = 0;\r\n\r\n    for (uint256 i = 0; i < contractRegistry.length; i++) {\r\n        if (contractRegistry[i].tenant == _tenantAddress) {\r\n            result[counter] = contractRegistry[i];\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    // Resize the result array to remove any empty elements\r\n    assembly {\r\n        mstore(result, counter)\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n    // function getContractsByAddress(address _address) external view returns (Contract[] memory) {\r\n    //     Contract[] memory result = new Contract[](contractRegistry.length);\r\n    //     uint256 counter = 0;\r\n\r\n    //     for (uint256 i = 0; i < contractRegistry.length; i++) {\r\n    //         if (contractRegistry[i].landlord == _address || contractRegistry[i].tenant == _address) {\r\n    //             result[counter] = contractRegistry[i];\r\n    //             counter++;\r\n    //         }\r\n    //     }\r\n\r\n    //     return result;\r\n    // }\r\n\r\n    //     function getRegistryDetails() external view returns (Contract[] memory) {\r\n    //     Contract[] memory result = new Contract[](contractRegistry.length);\r\n\r\n    //     for (uint256 i = 0; i < contractRegistry.length; i++) {\r\n    //         result[i] = Contract({\r\n    //             ID: contractRegistry[i].ID,\r\n    //             landlord: contractRegistry[i].landlord,\r\n    //             tenant: contractRegistry[i].tenant,\r\n    //             rentAmount: contractRegistry[i].rentAmount,\r\n    //             securityDeposit: contractRegistry[i].securityDeposit,\r\n    //             leaseDuration: contractRegistry[i].leaseDuration,\r\n    //             startDate: contractRegistry[i].startDate,\r\n    //             terminationDate: contractRegistry[i].terminationDate,\r\n    //             propertyID: contractRegistry[i].propertyID,\r\n    //             status: contractRegistry[i].status,\r\n    //             terms: contractRegistry[i].terms,\r\n    //             tenantApproved: contractRegistry[i].tenantApproved,\r\n    //             landlordApproved: contractRegistry[i].landlordApproved\r\n    //         });\r\n    //     }\r\n\r\n    //     return result;\r\n    // }\r\n}\r\n",
  "sourcePath": "D:\\Fast\\Sem 8\\FYP_Final\\TranspaRent\\Blockchain\\contracts\\AgreementFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/AgreementFactory.sol",
    "exportedSymbols": {
      "AgreementFactory": [
        1028
      ],
      "DefaultTerms": [
        1245
      ],
      "DisputeResolution": [
        1460
      ]
    },
    "id": 1029,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "project:/contracts/DisputeResolution.sol",
        "file": "./DisputeResolution.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1029,
        "sourceUnit": 1461,
        "src": "61:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DefaultTerms.sol",
        "file": "./DefaultTerms.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1029,
        "sourceUnit": 1246,
        "src": "96:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AgreementFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1028,
        "linearizedBaseContracts": [
          1028
        ],
        "name": "AgreementFactory",
        "nameLocation": "139:16:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AgreementFactory.AgreementStatus",
            "id": 7,
            "members": [
              {
                "id": 4,
                "name": "Pending",
                "nameLocation": "197:7:0",
                "nodeType": "EnumValue",
                "src": "197:7:0"
              },
              {
                "id": 5,
                "name": "Active",
                "nameLocation": "215:6:0",
                "nodeType": "EnumValue",
                "src": "215:6:0"
              },
              {
                "id": 6,
                "name": "Terminated",
                "nameLocation": "232:10:0",
                "nodeType": "EnumValue",
                "src": "232:10:0"
              }
            ],
            "name": "AgreementStatus",
            "nameLocation": "170:15:0",
            "nodeType": "EnumDefinition",
            "src": "165:84:0"
          },
          {
            "canonicalName": "AgreementFactory.Contract",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "ID",
                "nameLocation": "284:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "276:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "landlord",
                "nameLocation": "301:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "293:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "tenant",
                "nameLocation": "324:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "316:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "316:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "landlordUsername",
                "nameLocation": "344:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "337:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "337:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "tenantUsername",
                "nameLocation": "412:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "405:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 16,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "rentAmount",
                "nameLocation": "479:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "471:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "471:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "securityDeposit",
                "nameLocation": "504:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "496:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "496:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "leaseDuration",
                "nameLocation": "534:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "526:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "526:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "startDate",
                "nameLocation": "562:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "554:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "554:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "terminationDate",
                "nameLocation": "586:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "578:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "propertyID",
                "nameLocation": "615:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "608:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 28,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "608:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "648:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "632:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_AgreementStatus_$7",
                  "typeString": "enum AgreementFactory.AgreementStatus"
                },
                "typeName": {
                  "id": 31,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 30,
                    "name": "AgreementStatus",
                    "nameLocations": [
                      "632:15:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 7,
                    "src": "632:15:0"
                  },
                  "referencedDeclaration": 7,
                  "src": "632:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AgreementStatus_$7",
                    "typeString": "enum AgreementFactory.AgreementStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "terms",
                "nameLocation": "670:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "661:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 34,
                  "nodeType": "ArrayTypeName",
                  "src": "661:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "tenantApproved",
                "nameLocation": "687:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "682:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 36,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "682:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "landlordApproved",
                "nameLocation": "713:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "708:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 38,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "708:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Contract",
            "nameLocation": "260:8:0",
            "nodeType": "StructDefinition",
            "scope": 1028,
            "src": "253:480:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b110205a",
            "id": 44,
            "mutability": "mutable",
            "name": "contractRegistry",
            "nameLocation": "761:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 1028,
            "src": "743:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
              "typeString": "struct AgreementFactory.Contract[]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41,
                  "name": "Contract",
                  "nameLocations": [
                    "743:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "743:8:0"
                },
                "referencedDeclaration": 40,
                "src": "743:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                  "typeString": "struct AgreementFactory.Contract"
                }
              },
              "id": 43,
              "nodeType": "ArrayTypeName",
              "src": "743:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr",
                "typeString": "struct AgreementFactory.Contract[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f46f96b2",
            "id": 47,
            "mutability": "mutable",
            "name": "disputeResolutionContract",
            "nameLocation": "809:25:0",
            "nodeType": "VariableDeclaration",
            "scope": 1028,
            "src": "784:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DisputeResolution_$1460",
              "typeString": "contract DisputeResolution"
            },
            "typeName": {
              "id": 46,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45,
                "name": "DisputeResolution",
                "nameLocations": [
                  "784:17:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1460,
                "src": "784:17:0"
              },
              "referencedDeclaration": 1460,
              "src": "784:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                "typeString": "contract DisputeResolution"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da997b27",
            "id": 50,
            "mutability": "mutable",
            "name": "defaultTermsContract",
            "nameLocation": "861:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 1028,
            "src": "841:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DefaultTerms_$1245",
              "typeString": "contract DefaultTerms"
            },
            "typeName": {
              "id": 49,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48,
                "name": "DefaultTerms",
                "nameLocations": [
                  "841:12:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1245,
                "src": "841:12:0"
              },
              "referencedDeclaration": 1245,
              "src": "841:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DefaultTerms_$1245",
                "typeString": "contract DefaultTerms"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "984:128:0",
              "statements": [
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "disputeResolutionContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "995:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                        "typeString": "contract DisputeResolution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60,
                      "name": "_disputeResolutionContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1023:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                        "typeString": "contract DisputeResolution"
                      }
                    },
                    "src": "995:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                      "typeString": "contract DisputeResolution"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "995:54:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "defaultTermsContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1060:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefaultTerms_$1245",
                        "typeString": "contract DefaultTerms"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64,
                      "name": "_defaultTermsContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1083:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefaultTerms_$1245",
                        "typeString": "contract DefaultTerms"
                      }
                    },
                    "src": "1060:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DefaultTerms_$1245",
                      "typeString": "contract DefaultTerms"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:44:0"
                }
              ]
            },
            "id": 68,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_disputeResolutionContract",
                  "nameLocation": "920:26:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "902:44:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                    "typeString": "contract DisputeResolution"
                  },
                  "typeName": {
                    "id": 52,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51,
                      "name": "DisputeResolution",
                      "nameLocations": [
                        "902:17:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1460,
                      "src": "902:17:0"
                    },
                    "referencedDeclaration": 1460,
                    "src": "902:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                      "typeString": "contract DisputeResolution"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_defaultTermsContract",
                  "nameLocation": "961:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "948:34:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DefaultTerms_$1245",
                    "typeString": "contract DefaultTerms"
                  },
                  "typeName": {
                    "id": 55,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54,
                      "name": "DefaultTerms",
                      "nameLocations": [
                        "948:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1245,
                      "src": "948:12:0"
                    },
                    "referencedDeclaration": 1245,
                    "src": "948:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DefaultTerms_$1245",
                      "typeString": "contract DefaultTerms"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:82:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:0:0"
            },
            "scope": 1028,
            "src": "890:222:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 357,
              "nodeType": "Block",
              "src": "1552:2605:0",
              "statements": [
                {
                  "body": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "1698:1387:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 100,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "1735:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 102,
                                    "indexExpression": {
                                      "id": 101,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "1752:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1735:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 103,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1755:8:0",
                                  "memberName": "landlord",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11,
                                  "src": "1735:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 104,
                                  "name": "_landlord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70,
                                  "src": "1767:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1735:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 106,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "1797:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 108,
                                    "indexExpression": {
                                      "id": 107,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "1814:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1797:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 109,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1817:6:0",
                                  "memberName": "tenant",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "1797:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 110,
                                  "name": "_tenant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "1827:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1797:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1735:99:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 116,
                                            "name": "contractRegistry",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "1882:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                            }
                                          },
                                          "id": 118,
                                          "indexExpression": {
                                            "id": 117,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 90,
                                            "src": "1899:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1882:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref"
                                          }
                                        },
                                        "id": 119,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1902:10:0",
                                        "memberName": "propertyID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 29,
                                        "src": "1882:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "id": 114,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "1865:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1869:12:0",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1865:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1865:48:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 113,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "1855:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1855:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 125,
                                        "name": "_propertyID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 86,
                                        "src": "1945:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 123,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "1928:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 124,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1932:12:0",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1928:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:29:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 122,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "1918:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1918:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1855:103:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1735:223:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_AgreementStatus_$7",
                              "typeString": "enum AgreementFactory.AgreementStatus"
                            },
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 130,
                                  "name": "contractRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "1979:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                  }
                                },
                                "id": 132,
                                "indexExpression": {
                                  "id": 131,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "1996:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1979:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$40_storage",
                                  "typeString": "struct AgreementFactory.Contract storage ref"
                                }
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1999:6:0",
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "1979:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                "typeString": "enum AgreementFactory.AgreementStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 134,
                                "name": "AgreementStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "2009:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                  "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                }
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2025:7:0",
                              "memberName": "Pending",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4,
                              "src": "2009:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                "typeString": "enum AgreementFactory.AgreementStatus"
                              }
                            },
                            "src": "1979:53:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1735:297:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 143,
                        "nodeType": "IfStatement",
                        "src": "1713:412:0",
                        "trueBody": {
                          "id": 142,
                          "nodeType": "Block",
                          "src": "2048:77:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "53696d696c617220636f6e747261637420616c72656164792070656e64696e67",
                                    "id": 139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2074:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_040187ea862c1b20abf720c5683114e38170b015707f22dfb5e711161ad1871a",
                                      "typeString": "literal_string \"Similar contract already pending\""
                                    },
                                    "value": "Similar contract already pending"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_040187ea862c1b20abf720c5683114e38170b015707f22dfb5e711161ad1871a",
                                      "typeString": "literal_string \"Similar contract already pending\""
                                    }
                                  ],
                                  "id": 138,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967277,
                                    4294967277
                                  ],
                                  "referencedDeclaration": 4294967277,
                                  "src": "2067:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2067:42:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 141,
                              "nodeType": "ExpressionStatement",
                              "src": "2067:42:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 144,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2157:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 146,
                                    "indexExpression": {
                                      "id": 145,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2174:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2157:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 147,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2177:8:0",
                                  "memberName": "landlord",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11,
                                  "src": "2157:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 148,
                                  "name": "_landlord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70,
                                  "src": "2189:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2157:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 150,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2219:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 152,
                                    "indexExpression": {
                                      "id": 151,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2236:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2219:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 153,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2239:6:0",
                                  "memberName": "tenant",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "2219:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 154,
                                  "name": "_tenant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "2249:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2219:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2157:99:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 160,
                                            "name": "contractRegistry",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "2304:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                            }
                                          },
                                          "id": 162,
                                          "indexExpression": {
                                            "id": 161,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 90,
                                            "src": "2321:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2304:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref"
                                          }
                                        },
                                        "id": 163,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2324:10:0",
                                        "memberName": "propertyID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 29,
                                        "src": "2304:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "id": 158,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2287:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 159,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2291:12:0",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "2287:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2287:48:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 157,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "2277:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2277:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 169,
                                        "name": "_propertyID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 86,
                                        "src": "2367:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 167,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2350:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 168,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2354:12:0",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "2350:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 170,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2350:29:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 166,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "2340:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2340:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "2277:103:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2157:223:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_AgreementStatus_$7",
                              "typeString": "enum AgreementFactory.AgreementStatus"
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 174,
                                  "name": "contractRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "2401:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                  }
                                },
                                "id": 176,
                                "indexExpression": {
                                  "id": 175,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "2418:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2401:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$40_storage",
                                  "typeString": "struct AgreementFactory.Contract storage ref"
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2421:6:0",
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "2401:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                "typeString": "enum AgreementFactory.AgreementStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 178,
                                "name": "AgreementStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "2431:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                  "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                }
                              },
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2447:10:0",
                              "memberName": "Terminated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6,
                              "src": "2431:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                "typeString": "enum AgreementFactory.AgreementStatus"
                              }
                            },
                            "src": "2401:56:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2157:300:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 246,
                        "nodeType": "IfStatement",
                        "src": "2153:921:0",
                        "trueBody": {
                          "id": 245,
                          "nodeType": "Block",
                          "src": "2458:616:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 182,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2479:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 184,
                                    "indexExpression": {
                                      "id": 183,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2496:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2479:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 185,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2499:10:0",
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19,
                                  "src": "2479:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 186,
                                  "name": "_rentAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "2512:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2479:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 188,
                              "nodeType": "ExpressionStatement",
                              "src": "2479:44:0"
                            },
                            {
                              "expression": {
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 189,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2542:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 191,
                                    "indexExpression": {
                                      "id": 190,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2559:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2542:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 192,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2562:15:0",
                                  "memberName": "securityDeposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21,
                                  "src": "2542:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 193,
                                  "name": "_securityDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80,
                                  "src": "2580:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2542:54:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 195,
                              "nodeType": "ExpressionStatement",
                              "src": "2542:54:0"
                            },
                            {
                              "expression": {
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 196,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2615:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 198,
                                    "indexExpression": {
                                      "id": 197,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2632:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2615:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 199,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2635:13:0",
                                  "memberName": "leaseDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "2615:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 200,
                                  "name": "_leaseDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82,
                                  "src": "2651:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2615:50:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 202,
                              "nodeType": "ExpressionStatement",
                              "src": "2615:50:0"
                            },
                            {
                              "expression": {
                                "id": 208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 203,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2684:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 205,
                                    "indexExpression": {
                                      "id": 204,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2701:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2684:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 206,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2704:9:0",
                                  "memberName": "startDate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25,
                                  "src": "2684:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 207,
                                  "name": "_startDate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84,
                                  "src": "2716:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2684:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 209,
                              "nodeType": "ExpressionStatement",
                              "src": "2684:42:0"
                            },
                            {
                              "expression": {
                                "id": 220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 210,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2745:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 212,
                                    "indexExpression": {
                                      "id": 211,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2762:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2745:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 213,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2765:15:0",
                                  "memberName": "terminationDate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 27,
                                  "src": "2745:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 214,
                                    "name": "_startDate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84,
                                    "src": "2783:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 215,
                                          "name": "_leaseDuration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 82,
                                          "src": "2797:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "3330",
                                          "id": 216,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2814:7:0",
                                          "subdenomination": "days",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2592000_by_1",
                                            "typeString": "int_const 2592000"
                                          },
                                          "value": "30"
                                        },
                                        "src": "2797:24:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 218,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2796:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2783:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2745:77:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 221,
                              "nodeType": "ExpressionStatement",
                              "src": "2745:77:0"
                            },
                            {
                              "expression": {
                                "id": 228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 222,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2841:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 224,
                                    "indexExpression": {
                                      "id": 223,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2858:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2841:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 225,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2861:6:0",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32,
                                  "src": "2841:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                    "typeString": "enum AgreementFactory.AgreementStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 226,
                                    "name": "AgreementStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "2870:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                      "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                    }
                                  },
                                  "id": 227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2886:7:0",
                                  "memberName": "Pending",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4,
                                  "src": "2870:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                    "typeString": "enum AgreementFactory.AgreementStatus"
                                  }
                                },
                                "src": "2841:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                  "typeString": "enum AgreementFactory.AgreementStatus"
                                }
                              },
                              "id": 229,
                              "nodeType": "ExpressionStatement",
                              "src": "2841:52:0"
                            },
                            {
                              "expression": {
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 230,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2912:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 232,
                                    "indexExpression": {
                                      "id": 231,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2929:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2912:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2932:14:0",
                                  "memberName": "tenantApproved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37,
                                  "src": "2912:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2949:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2912:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 236,
                              "nodeType": "ExpressionStatement",
                              "src": "2912:42:0"
                            },
                            {
                              "expression": {
                                "id": 242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 237,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "2973:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 239,
                                    "indexExpression": {
                                      "id": 238,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "2990:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2973:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 240,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2993:16:0",
                                  "memberName": "landlordApproved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 39,
                                  "src": "2973:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3012:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2973:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 243,
                              "nodeType": "ExpressionStatement",
                              "src": "2973:44:0"
                            },
                            {
                              "functionReturnParameters": 88,
                              "id": 244,
                              "nodeType": "Return",
                              "src": "3052:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 93,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1664:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 94,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1668:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1685:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1668:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1664:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "initializationExpression": {
                    "assignments": [
                      90
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1657:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "1652:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1652:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 92,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1661:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1652:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1693:3:0",
                      "subExpression": {
                        "id": 97,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1693:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 99,
                    "nodeType": "ExpressionStatement",
                    "src": "1693:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1647:1438:0"
                },
                {
                  "assignments": [
                    251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 251,
                      "mutability": "mutable",
                      "name": "newAgreement",
                      "nameLocation": "3114:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "3097:29:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                        "typeString": "struct AgreementFactory.Contract"
                      },
                      "typeName": {
                        "id": 250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 249,
                          "name": "Contract",
                          "nameLocations": [
                            "3097:8:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40,
                          "src": "3097:8:0"
                        },
                        "referencedDeclaration": 40,
                        "src": "3097:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 252,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3129:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3146:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3129:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr_$returns$_t_struct$_Contract_$40_storage_$attached_to$_t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct AgreementFactory.Contract storage ref[] storage pointer) returns (struct AgreementFactory.Contract storage ref)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3129:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                      "typeString": "struct AgreementFactory.Contract storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3097:55:0"
                },
                {
                  "expression": {
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 256,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3214:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3227:2:0",
                      "memberName": "ID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "3214:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 259,
                          "name": "contractRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "3232:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                          }
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3249:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3232:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3258:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3232:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3214:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "3214:45:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 265,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3270:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3283:8:0",
                      "memberName": "landlord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "3270:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 268,
                      "name": "_landlord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "3294:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3270:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:33:0"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 271,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3314:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3327:6:0",
                      "memberName": "tenant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3314:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "_tenant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "3336:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3314:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3314:29:0"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 277,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3354:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3367:16:0",
                      "memberName": "landlordUsername",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "3354:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 280,
                      "name": "_landlordUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "3386:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3354:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:49:0"
                },
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 283,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3441:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3454:14:0",
                      "memberName": "tenantUsername",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "3441:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 286,
                      "name": "_tenantUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "3471:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3441:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3441:45:0"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 289,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3526:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3539:10:0",
                      "memberName": "rentAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "3526:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 292,
                      "name": "_rentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "3552:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3526:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:37:0"
                },
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 295,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3574:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3587:15:0",
                      "memberName": "securityDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3574:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 298,
                      "name": "_securityDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3605:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3574:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3574:47:0"
                },
                {
                  "expression": {
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 301,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3632:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3645:13:0",
                      "memberName": "leaseDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3632:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 304,
                      "name": "_leaseDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3661:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3632:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:43:0"
                },
                {
                  "expression": {
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 307,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3686:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3699:9:0",
                      "memberName": "startDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "3686:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 310,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "3711:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3686:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "3686:35:0"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 313,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3732:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3745:15:0",
                      "memberName": "terminationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "3732:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 316,
                        "name": "_startDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "3763:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 317,
                              "name": "_leaseDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "3777:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3330",
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3794:7:0",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2592000_by_1",
                                "typeString": "int_const 2592000"
                              },
                              "value": "30"
                            },
                            "src": "3777:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 320,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3776:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3763:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3732:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:70:0"
                },
                {
                  "expression": {
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 324,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3813:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3826:10:0",
                      "memberName": "propertyID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "3813:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 327,
                      "name": "_propertyID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3839:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3813:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "3813:37:0"
                },
                {
                  "expression": {
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3883:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3896:6:0",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "3883:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                        "typeString": "enum AgreementFactory.AgreementStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 333,
                        "name": "AgreementStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3905:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                          "typeString": "type(enum AgreementFactory.AgreementStatus)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3921:7:0",
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "3905:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                        "typeString": "enum AgreementFactory.AgreementStatus"
                      }
                    },
                    "src": "3883:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AgreementStatus_$7",
                      "typeString": "enum AgreementFactory.AgreementStatus"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:45:0"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 337,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3939:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3952:14:0",
                      "memberName": "tenantApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3939:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3969:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3939:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3939:35:0"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 343,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3985:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3998:16:0",
                      "memberName": "landlordApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "3985:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4017:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3985:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "3985:37:0"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 349,
                        "name": "newAgreement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "4090:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract storage pointer"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4103:5:0",
                      "memberName": "terms",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "4090:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 352,
                          "name": "defaultTermsContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "4111:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DefaultTerms_$1245",
                            "typeString": "contract DefaultTerms"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4132:15:0",
                        "memberName": "getDefaultTerms",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1244,
                        "src": "4111:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (string memory[] memory)"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4111:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "4090:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:59:0"
                }
              ]
            },
            "functionSelector": "f3279e82",
            "id": 358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRentalAgreement",
            "nameLocation": "1215:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_landlord",
                  "nameLocation": "1255:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1247:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_tenant",
                  "nameLocation": "1283:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1275:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_landlordUsername",
                  "nameLocation": "1315:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1301:31:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_tenantUsername",
                  "nameLocation": "1357:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1343:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_rentAmount",
                  "nameLocation": "1391:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1383:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_securityDeposit",
                  "nameLocation": "1421:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1413:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_leaseDuration",
                  "nameLocation": "1456:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1448:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nameLocation": "1489:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1481:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_propertyID",
                  "nameLocation": "1524:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 358,
                  "src": "1510:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:306:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:0"
            },
            "scope": 1028,
            "src": "1206:2951:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "4259:1331:0",
              "statements": [
                {
                  "body": {
                    "id": 488,
                    "nodeType": "Block",
                    "src": "4317:1270:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 378,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "4346:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 380,
                                  "indexExpression": {
                                    "id": 379,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "4363:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4346:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 381,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4366:6:0",
                                "memberName": "tenant",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "4346:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 382,
                                "name": "_tenant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 360,
                                "src": "4376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4346:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 384,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "4400:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 386,
                                  "indexExpression": {
                                    "id": 385,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "4417:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4400:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 387,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4420:8:0",
                                "memberName": "landlord",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "4400:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 388,
                                "name": "_landlord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "4432:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4400:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4346:95:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 394,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "4485:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 396,
                                        "indexExpression": {
                                          "id": 395,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 368,
                                          "src": "4502:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4485:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 397,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4505:10:0",
                                      "memberName": "propertyID",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29,
                                      "src": "4485:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "expression": {
                                      "id": 392,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "4468:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "4472:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "4468:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4468:48:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 391,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "4458:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4458:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 403,
                                      "name": "_propertyID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 364,
                                      "src": "4548:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 401,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "4531:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "4535:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "4531:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4531:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 400,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "4521:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4521:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "4458:103:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4346:215:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 487,
                        "nodeType": "IfStatement",
                        "src": "4328:1252:0",
                        "trueBody": {
                          "id": 486,
                          "nodeType": "Block",
                          "src": "4573:1007:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                      "typeString": "enum AgreementFactory.AgreementStatus"
                                    },
                                    "id": 415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 409,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "4614:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 411,
                                        "indexExpression": {
                                          "id": 410,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 368,
                                          "src": "4631:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4614:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 412,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4634:6:0",
                                      "memberName": "status",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 32,
                                      "src": "4614:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 413,
                                        "name": "AgreementStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "4644:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                          "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                        }
                                      },
                                      "id": 414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "4660:7:0",
                                      "memberName": "Pending",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4,
                                      "src": "4644:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "src": "4614:53:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "41677265656d656e74206973206e6f742070656e64696e67",
                                    "id": 416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4686:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7daea80df65435d17bdd2135d399057867710fc6d7e7f81bf87f5d0c6d07e834",
                                      "typeString": "literal_string \"Agreement is not pending\""
                                    },
                                    "value": "Agreement is not pending"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_7daea80df65435d17bdd2135d399057867710fc6d7e7f81bf87f5d0c6d07e834",
                                      "typeString": "literal_string \"Agreement is not pending\""
                                    }
                                  ],
                                  "id": 408,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "4588:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4588:139:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 418,
                              "nodeType": "ExpressionStatement",
                              "src": "4588:139:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 419,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4748:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4752:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4748:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 421,
                                  "name": "_tenant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 360,
                                  "src": "4762:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4748:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 431,
                              "nodeType": "IfStatement",
                              "src": "4744:103:0",
                              "trueBody": {
                                "id": 430,
                                "nodeType": "Block",
                                "src": "4771:76:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 428,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 423,
                                            "name": "contractRegistry",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "4790:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                            }
                                          },
                                          "id": 425,
                                          "indexExpression": {
                                            "id": 424,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "4807:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4790:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref"
                                          }
                                        },
                                        "id": 426,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "4810:14:0",
                                        "memberName": "tenantApproved",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 37,
                                        "src": "4790:34:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 427,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4827:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "4790:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 429,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4790:41:0"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 432,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4867:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4871:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4867:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 434,
                                  "name": "_landlord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 362,
                                  "src": "4881:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4867:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 454,
                              "nodeType": "IfStatement",
                              "src": "4863:269:0",
                              "trueBody": {
                                "id": 453,
                                "nodeType": "Block",
                                "src": "4892:240:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 442,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 437,
                                                "name": "contractRegistry",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 44,
                                                "src": "4941:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                                  "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                                }
                                              },
                                              "id": 439,
                                              "indexExpression": {
                                                "id": 438,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 368,
                                                "src": "4958:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "4941:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Contract_$40_storage",
                                                "typeString": "struct AgreementFactory.Contract storage ref"
                                              }
                                            },
                                            "id": 440,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4961:14:0",
                                            "memberName": "tenantApproved",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 37,
                                            "src": "4941:34:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "74727565",
                                            "id": 441,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4979:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "value": "true"
                                          },
                                          "src": "4941:42:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "54656e616e7420686173206e6f7420417070726f76656420796574",
                                          "id": 443,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5006:29:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_67ae81dca60680860c10bd4353423bd0631b6722083178113b29743962e3d281",
                                            "typeString": "literal_string \"Tenant has not Approved yet\""
                                          },
                                          "value": "Tenant has not Approved yet"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_67ae81dca60680860c10bd4353423bd0631b6722083178113b29743962e3d281",
                                            "typeString": "literal_string \"Tenant has not Approved yet\""
                                          }
                                        ],
                                        "id": 436,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          4294967278,
                                          4294967278
                                        ],
                                        "referencedDeclaration": 4294967278,
                                        "src": "4911:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 444,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4911:143:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 445,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4911:143:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 451,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 446,
                                            "name": "contractRegistry",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "5073:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                            }
                                          },
                                          "id": 448,
                                          "indexExpression": {
                                            "id": 447,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "5090:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5073:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref"
                                          }
                                        },
                                        "id": 449,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "5093:16:0",
                                        "memberName": "landlordApproved",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "5073:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 450,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5112:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "5073:43:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 452,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5073:43:0"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 455,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "5152:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 457,
                                    "indexExpression": {
                                      "id": 456,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "5169:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5152:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 458,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5172:16:0",
                                  "memberName": "landlordApproved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 39,
                                  "src": "5152:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 459,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "5192:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 461,
                                    "indexExpression": {
                                      "id": 460,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "5209:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5192:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 462,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5212:14:0",
                                  "memberName": "tenantApproved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37,
                                  "src": "5192:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5152:74:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 484,
                              "nodeType": "IfStatement",
                              "src": "5148:401:0",
                              "trueBody": {
                                "id": 483,
                                "nodeType": "Block",
                                "src": "5228:321:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                            "typeString": "enum AgreementFactory.AgreementStatus"
                                          },
                                          "id": 471,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 465,
                                                "name": "contractRegistry",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 44,
                                                "src": "5338:16:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                                  "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                                }
                                              },
                                              "id": 467,
                                              "indexExpression": {
                                                "id": 466,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 368,
                                                "src": "5355:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "5338:19:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Contract_$40_storage",
                                                "typeString": "struct AgreementFactory.Contract storage ref"
                                              }
                                            },
                                            "id": 468,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5358:6:0",
                                            "memberName": "status",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 32,
                                            "src": "5338:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                              "typeString": "enum AgreementFactory.AgreementStatus"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 469,
                                              "name": "AgreementStatus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7,
                                              "src": "5368:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                                "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                              }
                                            },
                                            "id": 470,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "5384:10:0",
                                            "memberName": "Terminated",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 6,
                                            "src": "5368:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                              "typeString": "enum AgreementFactory.AgreementStatus"
                                            }
                                          },
                                          "src": "5338:56:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "41677265656d656e74206973207465726d696e61746564",
                                          "id": 472,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5417:25:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4dd3ad54aa9176b71c739c36932c1bc0489b4e83f9287e80f16943909514d69d",
                                            "typeString": "literal_string \"Agreement is terminated\""
                                          },
                                          "value": "Agreement is terminated"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_4dd3ad54aa9176b71c739c36932c1bc0489b4e83f9287e80f16943909514d69d",
                                            "typeString": "literal_string \"Agreement is terminated\""
                                          }
                                        ],
                                        "id": 464,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          4294967278,
                                          4294967278
                                        ],
                                        "referencedDeclaration": 4294967278,
                                        "src": "5308:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 473,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5308:153:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 474,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5308:153:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 481,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 475,
                                            "name": "contractRegistry",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "5482:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                            }
                                          },
                                          "id": 477,
                                          "indexExpression": {
                                            "id": 476,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "5499:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5482:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref"
                                          }
                                        },
                                        "id": 478,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "5502:6:0",
                                        "memberName": "status",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 32,
                                        "src": "5482:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                          "typeString": "enum AgreementFactory.AgreementStatus"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 479,
                                          "name": "AgreementStatus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7,
                                          "src": "5511:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                            "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                          }
                                        },
                                        "id": 480,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "5527:6:0",
                                        "memberName": "Active",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5,
                                        "src": "5511:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                          "typeString": "enum AgreementFactory.AgreementStatus"
                                        }
                                      },
                                      "src": "5482:51:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "id": 482,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5482:51:0"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 485,
                              "nodeType": "Break",
                              "src": "5563:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 371,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "4283:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 372,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "4287:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4304:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4287:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4283:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 489,
                  "initializationExpression": {
                    "assignments": [
                      368
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 368,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4276:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 489,
                        "src": "4271:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4271:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 370,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4280:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4271:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4312:3:0",
                      "subExpression": {
                        "id": 375,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "4312:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 377,
                    "nodeType": "ExpressionStatement",
                    "src": "4312:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4266:1321:0"
                }
              ]
            },
            "functionSelector": "69bf9753",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAgreement",
            "nameLocation": "4170:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "_tenant",
                  "nameLocation": "4195:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "4187:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4187:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "_landlord",
                  "nameLocation": "4212:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "4204:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4204:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "_propertyID",
                  "nameLocation": "4237:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "4223:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4223:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4186:63:0"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4259:0:0"
            },
            "scope": 1028,
            "src": "4161:1429:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "5699:978:0",
              "statements": [
                {
                  "body": {
                    "id": 585,
                    "nodeType": "Block",
                    "src": "5761:909:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 511,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "5798:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 513,
                                  "indexExpression": {
                                    "id": 512,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 501,
                                    "src": "5815:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5798:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 514,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5818:6:0",
                                "memberName": "tenant",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "5798:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 515,
                                "name": "_tenant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "5828:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5798:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 517,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "5856:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 519,
                                  "indexExpression": {
                                    "id": 518,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 501,
                                    "src": "5873:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5856:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 520,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5876:8:0",
                                "memberName": "landlord",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "5856:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 521,
                                "name": "_landlord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 495,
                                "src": "5888:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5856:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5798:99:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 527,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "5945:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 529,
                                        "indexExpression": {
                                          "id": 528,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 501,
                                          "src": "5962:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5945:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 530,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5965:10:0",
                                      "memberName": "propertyID",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29,
                                      "src": "5945:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "expression": {
                                      "id": 525,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "5928:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "5932:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "5928:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5928:48:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 524,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "5918:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5918:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 536,
                                      "name": "_propertyID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "6008:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 534,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "5991:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "5995:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "5991:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5991:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 533,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "5981:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5981:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "5918:103:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5798:223:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 584,
                        "nodeType": "IfStatement",
                        "src": "5776:883:0",
                        "trueBody": {
                          "id": 583,
                          "nodeType": "Block",
                          "src": "6037:622:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                      "typeString": "enum AgreementFactory.AgreementStatus"
                                    },
                                    "id": 548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 542,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "6086:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 544,
                                        "indexExpression": {
                                          "id": 543,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 501,
                                          "src": "6103:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6086:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 545,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6106:6:0",
                                      "memberName": "status",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 32,
                                      "src": "6086:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 546,
                                        "name": "AgreementStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "6116:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                          "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                        }
                                      },
                                      "id": 547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6132:7:0",
                                      "memberName": "Pending",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4,
                                      "src": "6116:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "src": "6086:53:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "41677265656d656e74206973206e6f742070656e64696e67",
                                    "id": 549,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6162:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7daea80df65435d17bdd2135d399057867710fc6d7e7f81bf87f5d0c6d07e834",
                                      "typeString": "literal_string \"Agreement is not pending\""
                                    },
                                    "value": "Agreement is not pending"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_7daea80df65435d17bdd2135d399057867710fc6d7e7f81bf87f5d0c6d07e834",
                                      "typeString": "literal_string \"Agreement is not pending\""
                                    }
                                  ],
                                  "id": 541,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "6056:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6056:151:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 551,
                              "nodeType": "ExpressionStatement",
                              "src": "6056:151:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                      "typeString": "enum AgreementFactory.AgreementStatus"
                                    },
                                    "id": 559,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 553,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "6256:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 555,
                                        "indexExpression": {
                                          "id": 554,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 501,
                                          "src": "6273:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6256:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 556,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6276:6:0",
                                      "memberName": "status",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 32,
                                      "src": "6256:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 557,
                                        "name": "AgreementStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "6286:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                          "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                        }
                                      },
                                      "id": 558,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6302:6:0",
                                      "memberName": "Active",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5,
                                      "src": "6286:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "src": "6256:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "41677265656d656e7420697320617070726f766564",
                                    "id": 560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6331:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3e14de3bb7da6be240c12d6c8edc28066db11ffb48866a79670af9276e621ebc",
                                      "typeString": "literal_string \"Agreement is approved\""
                                    },
                                    "value": "Agreement is approved"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3e14de3bb7da6be240c12d6c8edc28066db11ffb48866a79670af9276e621ebc",
                                      "typeString": "literal_string \"Agreement is approved\""
                                    }
                                  ],
                                  "id": 552,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "6226:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6226:147:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 562,
                              "nodeType": "ExpressionStatement",
                              "src": "6226:147:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                      "typeString": "enum AgreementFactory.AgreementStatus"
                                    },
                                    "id": 570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 564,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "6422:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 566,
                                        "indexExpression": {
                                          "id": 565,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 501,
                                          "src": "6439:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6422:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 567,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6442:6:0",
                                      "memberName": "status",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 32,
                                      "src": "6422:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 568,
                                        "name": "AgreementStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "6452:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                          "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                        }
                                      },
                                      "id": 569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6468:10:0",
                                      "memberName": "Terminated",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6,
                                      "src": "6452:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "src": "6422:56:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "41677265656d656e74206973207465726d696e61746564",
                                    "id": 571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6501:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4dd3ad54aa9176b71c739c36932c1bc0489b4e83f9287e80f16943909514d69d",
                                      "typeString": "literal_string \"Agreement is terminated\""
                                    },
                                    "value": "Agreement is terminated"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_4dd3ad54aa9176b71c739c36932c1bc0489b4e83f9287e80f16943909514d69d",
                                      "typeString": "literal_string \"Agreement is terminated\""
                                    }
                                  ],
                                  "id": 563,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "6392:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6392:153:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 573,
                              "nodeType": "ExpressionStatement",
                              "src": "6392:153:0"
                            },
                            {
                              "expression": {
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 574,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "6564:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 576,
                                    "indexExpression": {
                                      "id": 575,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 501,
                                      "src": "6581:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6564:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "6584:6:0",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32,
                                  "src": "6564:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                    "typeString": "enum AgreementFactory.AgreementStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 578,
                                    "name": "AgreementStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "6593:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                      "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                    }
                                  },
                                  "id": 579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6609:10:0",
                                  "memberName": "Terminated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6,
                                  "src": "6593:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                    "typeString": "enum AgreementFactory.AgreementStatus"
                                  }
                                },
                                "src": "6564:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                  "typeString": "enum AgreementFactory.AgreementStatus"
                                }
                              },
                              "id": 581,
                              "nodeType": "ExpressionStatement",
                              "src": "6564:55:0"
                            },
                            {
                              "id": 582,
                              "nodeType": "Break",
                              "src": "6638:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 504,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "5727:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 505,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5731:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5748:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5731:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5727:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 586,
                  "initializationExpression": {
                    "assignments": [
                      501
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5720:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5715:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5715:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 503,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5724:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5715:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5756:3:0",
                      "subExpression": {
                        "id": 508,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "5756:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 510,
                    "nodeType": "ExpressionStatement",
                    "src": "5756:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5710:960:0"
                }
              ]
            },
            "functionSelector": "a10b29b7",
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disapproveAgreement",
            "nameLocation": "5607:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "_tenant",
                  "nameLocation": "5635:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "5627:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5627:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "_landlord",
                  "nameLocation": "5652:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "5644:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5644:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "_propertyID",
                  "nameLocation": "5677:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "5663:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5663:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5626:63:0"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5699:0:0"
            },
            "scope": 1028,
            "src": "5598:1079:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "6785:896:0",
              "statements": [
                {
                  "body": {
                    "id": 679,
                    "nodeType": "Block",
                    "src": "6847:827:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 608,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "6884:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 610,
                                    "indexExpression": {
                                      "id": 609,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 598,
                                      "src": "6901:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6884:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 611,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6904:6:0",
                                  "memberName": "tenant",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "6884:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 612,
                                  "name": "_tenant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 590,
                                  "src": "6914:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6884:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 614,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "6942:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 616,
                                    "indexExpression": {
                                      "id": 615,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 598,
                                      "src": "6959:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6942:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 617,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6962:8:0",
                                  "memberName": "landlord",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11,
                                  "src": "6942:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 618,
                                  "name": "_landlord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 592,
                                  "src": "6974:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6942:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6884:99:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 624,
                                            "name": "contractRegistry",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 44,
                                            "src": "7031:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                            }
                                          },
                                          "id": 626,
                                          "indexExpression": {
                                            "id": 625,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 598,
                                            "src": "7048:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7031:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref"
                                          }
                                        },
                                        "id": 627,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7051:10:0",
                                        "memberName": "propertyID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 29,
                                        "src": "7031:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "expression": {
                                        "id": 622,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "7014:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 623,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "7018:12:0",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "7014:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 628,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7014:48:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 621,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "7004:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7004:59:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 633,
                                        "name": "_propertyID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 594,
                                        "src": "7094:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 631,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "7077:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 632,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "7081:12:0",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "7077:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7077:29:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 630,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "7067:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7067:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "7004:103:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6884:223:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_AgreementStatus_$7",
                              "typeString": "enum AgreementFactory.AgreementStatus"
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 638,
                                  "name": "contractRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "7128:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                  }
                                },
                                "id": 640,
                                "indexExpression": {
                                  "id": 639,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 598,
                                  "src": "7145:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7128:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$40_storage",
                                  "typeString": "struct AgreementFactory.Contract storage ref"
                                }
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7148:6:0",
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "7128:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                "typeString": "enum AgreementFactory.AgreementStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 642,
                                "name": "AgreementStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "7158:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                  "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7174:10:0",
                              "memberName": "Terminated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6,
                              "src": "7158:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                "typeString": "enum AgreementFactory.AgreementStatus"
                              }
                            },
                            "src": "7128:56:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6884:300:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 678,
                        "nodeType": "IfStatement",
                        "src": "6862:801:0",
                        "trueBody": {
                          "id": 677,
                          "nodeType": "Block",
                          "src": "7195:468:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                      "typeString": "enum AgreementFactory.AgreementStatus"
                                    },
                                    "id": 653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 647,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "7244:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 649,
                                        "indexExpression": {
                                          "id": 648,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 598,
                                          "src": "7261:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7244:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 650,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7264:6:0",
                                      "memberName": "status",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 32,
                                      "src": "7244:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 651,
                                        "name": "AgreementStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "7274:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                          "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                        }
                                      },
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "7290:10:0",
                                      "memberName": "Terminated",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6,
                                      "src": "7274:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "src": "7244:56:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "41677265656d656e742068617320616c7265616479206265656e207465726d696e61746564",
                                    "id": 654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7323:39:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3109651200b72eab60e459fa2407a332450020dd4a008ed0e4ed6e12dc3a7a41",
                                      "typeString": "literal_string \"Agreement has already been terminated\""
                                    },
                                    "value": "Agreement has already been terminated"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3109651200b72eab60e459fa2407a332450020dd4a008ed0e4ed6e12dc3a7a41",
                                      "typeString": "literal_string \"Agreement has already been terminated\""
                                    }
                                  ],
                                  "id": 646,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "7214:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7214:167:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 656,
                              "nodeType": "ExpressionStatement",
                              "src": "7214:167:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                      "typeString": "enum AgreementFactory.AgreementStatus"
                                    },
                                    "id": 664,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 658,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "7430:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 660,
                                        "indexExpression": {
                                          "id": 659,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 598,
                                          "src": "7447:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7430:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 661,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7450:6:0",
                                      "memberName": "status",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 32,
                                      "src": "7430:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 662,
                                        "name": "AgreementStatus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "7460:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                          "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                        }
                                      },
                                      "id": 663,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "7476:6:0",
                                      "memberName": "Active",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5,
                                      "src": "7460:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                        "typeString": "enum AgreementFactory.AgreementStatus"
                                      }
                                    },
                                    "src": "7430:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "41677265656d656e74206973206e6f7420416374697665",
                                    "id": 665,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7505:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3b181d67e80833c5d6c55b82e0f092c900a932d004c4dea00a607e2e07b49501",
                                      "typeString": "literal_string \"Agreement is not Active\""
                                    },
                                    "value": "Agreement is not Active"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3b181d67e80833c5d6c55b82e0f092c900a932d004c4dea00a607e2e07b49501",
                                      "typeString": "literal_string \"Agreement is not Active\""
                                    }
                                  ],
                                  "id": 657,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "7400:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7400:149:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 667,
                              "nodeType": "ExpressionStatement",
                              "src": "7400:149:0"
                            },
                            {
                              "expression": {
                                "id": 674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 668,
                                      "name": "contractRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "7568:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                        "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                      }
                                    },
                                    "id": 670,
                                    "indexExpression": {
                                      "id": 669,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 598,
                                      "src": "7585:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7568:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$40_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref"
                                    }
                                  },
                                  "id": 671,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7588:6:0",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32,
                                  "src": "7568:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                    "typeString": "enum AgreementFactory.AgreementStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 672,
                                    "name": "AgreementStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "7597:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_AgreementStatus_$7_$",
                                      "typeString": "type(enum AgreementFactory.AgreementStatus)"
                                    }
                                  },
                                  "id": 673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7613:10:0",
                                  "memberName": "Terminated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6,
                                  "src": "7597:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                    "typeString": "enum AgreementFactory.AgreementStatus"
                                  }
                                },
                                "src": "7568:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AgreementStatus_$7",
                                  "typeString": "enum AgreementFactory.AgreementStatus"
                                }
                              },
                              "id": 675,
                              "nodeType": "ExpressionStatement",
                              "src": "7568:55:0"
                            },
                            {
                              "id": 676,
                              "nodeType": "Break",
                              "src": "7642:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 601,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "6813:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 602,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "6817:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6834:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6817:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6813:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 680,
                  "initializationExpression": {
                    "assignments": [
                      598
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6806:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 680,
                        "src": "6801:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6801:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 600,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6810:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6801:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6842:3:0",
                      "subExpression": {
                        "id": 605,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "6842:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 607,
                    "nodeType": "ExpressionStatement",
                    "src": "6842:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6796:878:0"
                }
              ]
            },
            "functionSelector": "6d9a5acc",
            "id": 682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "terminateAgreement",
            "nameLocation": "6694:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "_tenant",
                  "nameLocation": "6721:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "6713:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6713:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "_landlord",
                  "nameLocation": "6738:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "6730:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6730:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "_propertyID",
                  "nameLocation": "6763:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "6749:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6749:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6712:63:0"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6785:0:0"
            },
            "scope": 1028,
            "src": "6685:996:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "7907:471:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 692,
                          "name": "_agreementID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 684,
                          "src": "7926:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 693,
                            "name": "contractRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "7941:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7958:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7941:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7926:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061677265656d656e74204944",
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7966:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_355b1cf507c7634f521b893962589332d890bb82532de06db17e2b43d576f6ff",
                          "typeString": "literal_string \"Invalid agreement ID\""
                        },
                        "value": "Invalid agreement ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_355b1cf507c7634f521b893962589332d890bb82532de06db17e2b43d576f6ff",
                          "typeString": "literal_string \"Invalid agreement ID\""
                        }
                      ],
                      "id": 691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7918:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7918:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "7918:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 700,
                              "name": "contractRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "8022:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                              }
                            },
                            "id": 702,
                            "indexExpression": {
                              "id": 701,
                              "name": "_agreementID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "8039:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8022:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Contract_$40_storage",
                              "typeString": "struct AgreementFactory.Contract storage ref"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8053:6:0",
                          "memberName": "tenant",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "8022:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8063:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8067:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8063:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8022:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074656e616e742063616e20726169736520612064697370757465",
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8088:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6cec643cc4e8f9f634102e34572f5838c69b1e1cbc4e8ee22e860bc74fa6e25",
                          "typeString": "literal_string \"Only tenant can raise a dispute\""
                        },
                        "value": "Only tenant can raise a dispute"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6cec643cc4e8f9f634102e34572f5838c69b1e1cbc4e8ee22e860bc74fa6e25",
                          "typeString": "literal_string \"Only tenant can raise a dispute\""
                        }
                      ],
                      "id": 699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8000:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8000:132:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "8000:132:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 713,
                        "name": "_agreementID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "8198:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 714,
                            "name": "contractRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "8225:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                            }
                          },
                          "id": 716,
                          "indexExpression": {
                            "id": 715,
                            "name": "_agreementID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "8242:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8225:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                            "typeString": "struct AgreementFactory.Contract storage ref"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8256:6:0",
                        "memberName": "tenant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "8225:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 718,
                            "name": "contractRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "8277:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                              "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                            }
                          },
                          "id": 720,
                          "indexExpression": {
                            "id": 719,
                            "name": "_agreementID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "8294:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8277:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$40_storage",
                            "typeString": "struct AgreementFactory.Contract storage ref"
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8308:8:0",
                        "memberName": "landlord",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "8277:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 722,
                        "name": "_title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "8331:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 723,
                        "name": "_reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "8352:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 710,
                        "name": "disputeResolutionContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "8145:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                          "typeString": "contract DisputeResolution"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8171:12:0",
                      "memberName": "raiseDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1308,
                      "src": "8145:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,address,string memory,string memory) external"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8145:225:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "8145:225:0"
                }
              ]
            },
            "functionSelector": "5b982d2f",
            "id": 727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "raiseDispute",
            "nameLocation": "7784:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "_agreementID",
                  "nameLocation": "7815:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7807:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7807:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "_title",
                  "nameLocation": "7852:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7838:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7838:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_reason",
                  "nameLocation": "7883:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "7869:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7869:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7796:101:0"
            },
            "returnParameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7907:0:0"
            },
            "scope": 1028,
            "src": "7775:603:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "8491:84:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 737,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 729,
                        "src": "8543:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 738,
                        "name": "_resolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "8555:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 734,
                        "name": "disputeResolutionContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "8502:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                          "typeString": "contract DisputeResolution"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8528:14:0",
                      "memberName": "resolveDispute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1350,
                      "src": "8502:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) external"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8502:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "8502:65:0"
                }
              ]
            },
            "functionSelector": "cf51b45d",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolveDispute",
            "nameLocation": "8395:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "8428:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "8420:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8420:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "_resolution",
                  "nameLocation": "8463:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "8449:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8449:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8409:72:0"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8491:0:0"
            },
            "scope": 1028,
            "src": "8386:189:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "8863:459:0",
              "statements": [
                {
                  "body": {
                    "id": 801,
                    "nodeType": "Block",
                    "src": "8925:351:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 764,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "8962:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 766,
                                  "indexExpression": {
                                    "id": 765,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 754,
                                    "src": "8979:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8962:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8982:6:0",
                                "memberName": "tenant",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "8962:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 768,
                                "name": "_tenant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 744,
                                "src": "8992:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8962:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 770,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "9020:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 772,
                                  "indexExpression": {
                                    "id": 771,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 754,
                                    "src": "9037:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9020:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 773,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9040:8:0",
                                "memberName": "landlord",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "9020:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 774,
                                "name": "_landlord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 746,
                                "src": "9052:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9020:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8962:99:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 780,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "9109:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 782,
                                        "indexExpression": {
                                          "id": 781,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 754,
                                          "src": "9126:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9109:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 783,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9129:10:0",
                                      "memberName": "propertyID",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29,
                                      "src": "9109:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "expression": {
                                      "id": 778,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "9092:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "9096:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "9092:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9092:48:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 777,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "9082:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9082:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 789,
                                      "name": "_propertyID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 748,
                                      "src": "9172:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 787,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "9155:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 788,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "9159:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "9155:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9155:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 786,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "9145:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9145:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "9082:103:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8962:223:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 800,
                        "nodeType": "IfStatement",
                        "src": "8940:325:0",
                        "trueBody": {
                          "id": 799,
                          "nodeType": "Block",
                          "src": "9201:64:0",
                          "statements": [
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 794,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "9227:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 796,
                                  "indexExpression": {
                                    "id": 795,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 754,
                                    "src": "9244:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9227:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 797,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9247:2:0",
                                "memberName": "ID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9,
                                "src": "9227:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 752,
                              "id": 798,
                              "nodeType": "Return",
                              "src": "9220:29:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 757,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "8891:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 758,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "8895:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8912:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8895:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8891:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 802,
                  "initializationExpression": {
                    "assignments": [
                      754
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 754,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8884:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "8879:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 753,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8879:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 756,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8888:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8879:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8920:3:0",
                      "subExpression": {
                        "id": 761,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "8920:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 763,
                    "nodeType": "ExpressionStatement",
                    "src": "8920:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "8874:402:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374206e6f7420666f756e64",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9293:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83e6f26acfe0377abfebb115f6a1acd27e86bbef8936cd1c936528d59dff758d",
                          "typeString": "literal_string \"Contract not found\""
                        },
                        "value": "Contract not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_83e6f26acfe0377abfebb115f6a1acd27e86bbef8936cd1c936528d59dff758d",
                          "typeString": "literal_string \"Contract not found\""
                        }
                      ],
                      "id": 803,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "9286:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9286:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "9286:28:0"
                }
              ]
            },
            "functionSelector": "8a46c9d8",
            "id": 808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractID",
            "nameLocation": "8720:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "_tenant",
                  "nameLocation": "8752:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "8744:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8744:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "_landlord",
                  "nameLocation": "8778:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "8770:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8770:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "_propertyID",
                  "nameLocation": "8812:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "8798:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8798:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8733:97:0"
            },
            "returnParameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "8854:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8854:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8853:9:0"
            },
            "scope": 1028,
            "src": "8711:611:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "9495:456:0",
              "statements": [
                {
                  "body": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "9557:348:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 831,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "9594:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 833,
                                  "indexExpression": {
                                    "id": 832,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 821,
                                    "src": "9611:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9594:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 834,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9614:6:0",
                                "memberName": "tenant",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "9594:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 835,
                                "name": "_tenant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 810,
                                "src": "9624:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9594:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 837,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "9652:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 839,
                                  "indexExpression": {
                                    "id": 838,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 821,
                                    "src": "9669:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9652:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "id": 840,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9672:8:0",
                                "memberName": "landlord",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "9652:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 841,
                                "name": "_landlord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 812,
                                "src": "9684:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9652:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9594:99:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 847,
                                          "name": "contractRegistry",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "9741:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                          }
                                        },
                                        "id": 849,
                                        "indexExpression": {
                                          "id": 848,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 821,
                                          "src": "9758:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9741:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Contract_$40_storage",
                                          "typeString": "struct AgreementFactory.Contract storage ref"
                                        }
                                      },
                                      "id": 850,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9761:10:0",
                                      "memberName": "propertyID",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29,
                                      "src": "9741:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "expression": {
                                      "id": 845,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "9724:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "9728:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "9724:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9724:48:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 844,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "9714:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9714:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 856,
                                      "name": "_propertyID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 814,
                                      "src": "9804:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 854,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "9787:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "9791:12:0",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "9787:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 857,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9787:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 853,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "9777:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9777:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "9714:103:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9594:223:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 866,
                        "nodeType": "IfStatement",
                        "src": "9572:322:0",
                        "trueBody": {
                          "id": 865,
                          "nodeType": "Block",
                          "src": "9833:61:0",
                          "statements": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 861,
                                  "name": "contractRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "9859:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                  }
                                },
                                "id": 863,
                                "indexExpression": {
                                  "id": 862,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 821,
                                  "src": "9876:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9859:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$40_storage",
                                  "typeString": "struct AgreementFactory.Contract storage ref"
                                }
                              },
                              "functionReturnParameters": 819,
                              "id": 864,
                              "nodeType": "Return",
                              "src": "9852:26:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 824,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 821,
                      "src": "9523:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 825,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "9527:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9544:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9527:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9523:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 868,
                  "initializationExpression": {
                    "assignments": [
                      821
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 821,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9516:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "9511:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 820,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9511:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 823,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9520:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9511:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9552:3:0",
                      "subExpression": {
                        "id": 828,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "9552:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 830,
                    "nodeType": "ExpressionStatement",
                    "src": "9552:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "9506:399:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374206e6f7420666f756e64",
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9922:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83e6f26acfe0377abfebb115f6a1acd27e86bbef8936cd1c936528d59dff758d",
                          "typeString": "literal_string \"Contract not found\""
                        },
                        "value": "Contract not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_83e6f26acfe0377abfebb115f6a1acd27e86bbef8936cd1c936528d59dff758d",
                          "typeString": "literal_string \"Contract not found\""
                        }
                      ],
                      "id": 869,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "9915:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9915:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "9915:28:0"
                }
              ]
            },
            "functionSelector": "2b0b9d99",
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractDetails",
            "nameLocation": "9339:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "_tenant",
                  "nameLocation": "9376:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "9368:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9368:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "_landlord",
                  "nameLocation": "9402:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "9394:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9394:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "_propertyID",
                  "nameLocation": "9436:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "9422:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9422:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9357:97:0"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "9478:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Contract_$40_memory_ptr",
                    "typeString": "struct AgreementFactory.Contract"
                  },
                  "typeName": {
                    "id": 817,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 816,
                      "name": "Contract",
                      "nameLocations": [
                        "9478:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40,
                      "src": "9478:8:0"
                    },
                    "referencedDeclaration": 40,
                    "src": "9478:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                      "typeString": "struct AgreementFactory.Contract"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9477:17:0"
            },
            "scope": 1028,
            "src": "9330:621:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "10079:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 884,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "10141:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 882,
                        "name": "disputeResolutionContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "10097:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                          "typeString": "contract DisputeResolution"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10123:17:0",
                      "memberName": "getDisputeDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1371,
                      "src": "10097:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Dispute_$1268_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct DisputeResolution.Dispute memory)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10097:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$1268_memory_ptr",
                      "typeString": "struct DisputeResolution.Dispute memory"
                    }
                  },
                  "functionReturnParameters": 881,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "10090:62:0"
                }
              ]
            },
            "functionSelector": "ea89735d",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDisputeDetails",
            "nameLocation": "9968:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "10004:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "9996:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9996:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9985:36:0"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "10045:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Dispute_$1268_memory_ptr",
                    "typeString": "struct DisputeResolution.Dispute"
                  },
                  "typeName": {
                    "id": 879,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 878,
                      "name": "DisputeResolution.Dispute",
                      "nameLocations": [
                        "10045:17:0",
                        "10063:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1268,
                      "src": "10045:25:0"
                    },
                    "referencedDeclaration": 1268,
                    "src": "10045:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$1268_storage_ptr",
                      "typeString": "struct DisputeResolution.Dispute"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10044:34:0"
            },
            "scope": 1028,
            "src": "9959:201:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 902,
              "nodeType": "Block",
              "src": "10289:89:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 899,
                        "name": "_agreementID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "10357:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 897,
                        "name": "disputeResolutionContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "10307:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DisputeResolution_$1460",
                          "typeString": "contract DisputeResolution"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10333:23:0",
                      "memberName": "getDisputesForAgreement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1459,
                      "src": "10307:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_struct$_Dispute_$1268_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct DisputeResolution.Dispute memory[] memory)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10307:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Dispute_$1268_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct DisputeResolution.Dispute memory[] memory"
                    }
                  },
                  "functionReturnParameters": 896,
                  "id": 901,
                  "nodeType": "Return",
                  "src": "10300:70:0"
                }
              ]
            },
            "functionSelector": "e2bc6cca",
            "id": 903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllDisputes",
            "nameLocation": "10177:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_agreementID",
                  "nameLocation": "10210:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "10202:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10202:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10191:38:0"
            },
            "returnParameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "10253:34:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Dispute_$1268_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DisputeResolution.Dispute[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 893,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 892,
                        "name": "DisputeResolution.Dispute",
                        "nameLocations": [
                          "10253:17:0",
                          "10271:7:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1268,
                        "src": "10253:25:0"
                      },
                      "referencedDeclaration": 1268,
                      "src": "10253:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$1268_storage_ptr",
                        "typeString": "struct DisputeResolution.Dispute"
                      }
                    },
                    "id": 894,
                    "nodeType": "ArrayTypeName",
                    "src": "10253:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Dispute_$1268_storage_$dyn_storage_ptr",
                      "typeString": "struct DisputeResolution.Dispute[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10252:36:0"
            },
            "scope": 1028,
            "src": "10168:210:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 964,
              "nodeType": "Block",
              "src": "10483:466:0",
              "statements": [
                {
                  "assignments": [
                    916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 916,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "10508:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 964,
                      "src": "10490:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AgreementFactory.Contract[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 914,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 913,
                            "name": "Contract",
                            "nameLocations": [
                              "10490:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40,
                            "src": "10490:8:0"
                          },
                          "referencedDeclaration": 40,
                          "src": "10490:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                            "typeString": "struct AgreementFactory.Contract"
                          }
                        },
                        "id": 915,
                        "nodeType": "ArrayTypeName",
                        "src": "10490:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 924,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 921,
                          "name": "contractRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "10532:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10549:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10532:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10517:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AgreementFactory.Contract memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 918,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 917,
                            "name": "Contract",
                            "nameLocations": [
                              "10521:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40,
                            "src": "10521:8:0"
                          },
                          "referencedDeclaration": 40,
                          "src": "10521:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                            "typeString": "struct AgreementFactory.Contract"
                          }
                        },
                        "id": 919,
                        "nodeType": "ArrayTypeName",
                        "src": "10521:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract[]"
                        }
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10517:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AgreementFactory.Contract memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10490:66:0"
                },
                {
                  "assignments": [
                    926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 926,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "10571:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 964,
                      "src": "10563:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 925,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10563:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 928,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10581:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10563:19:0"
                },
                {
                  "body": {
                    "id": 959,
                    "nodeType": "Block",
                    "src": "10645:160:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 940,
                                "name": "contractRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "10660:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                  "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                }
                              },
                              "id": 942,
                              "indexExpression": {
                                "id": 941,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 930,
                                "src": "10677:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10660:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Contract_$40_storage",
                                "typeString": "struct AgreementFactory.Contract storage ref"
                              }
                            },
                            "id": 943,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10680:8:0",
                            "memberName": "landlord",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "10660:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 944,
                            "name": "_landlordAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "10692:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10660:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 958,
                        "nodeType": "IfStatement",
                        "src": "10656:142:0",
                        "trueBody": {
                          "id": 957,
                          "nodeType": "Block",
                          "src": "10710:88:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 946,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 916,
                                    "src": "10725:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct AgreementFactory.Contract memory[] memory"
                                    }
                                  },
                                  "id": 948,
                                  "indexExpression": {
                                    "id": 947,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 926,
                                    "src": "10732:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10725:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_memory_ptr",
                                    "typeString": "struct AgreementFactory.Contract memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 949,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "10743:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 951,
                                  "indexExpression": {
                                    "id": 950,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 930,
                                    "src": "10760:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10743:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "src": "10725:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$40_memory_ptr",
                                  "typeString": "struct AgreementFactory.Contract memory"
                                }
                              },
                              "id": 953,
                              "nodeType": "ExpressionStatement",
                              "src": "10725:37:0"
                            },
                            {
                              "expression": {
                                "id": 955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "10777:9:0",
                                "subExpression": {
                                  "id": 954,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 926,
                                  "src": "10777:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 956,
                              "nodeType": "ExpressionStatement",
                              "src": "10777:9:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 933,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 930,
                      "src": "10611:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 934,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "10615:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10632:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10615:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10611:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "initializationExpression": {
                    "assignments": [
                      930
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10604:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 960,
                        "src": "10596:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10596:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 932,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10608:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10596:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10640:3:0",
                      "subExpression": {
                        "id": 937,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "10640:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 939,
                    "nodeType": "ExpressionStatement",
                    "src": "10640:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "10591:214:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10883:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "10901:6:0"
                            },
                            {
                              "name": "counter",
                              "nodeType": "YulIdentifier",
                              "src": "10909:7:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10894:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10894:23:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10894:23:0"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 926,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10909:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 916,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10901:6:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 961,
                  "nodeType": "InlineAssembly",
                  "src": "10874:50:0"
                },
                {
                  "expression": {
                    "id": 962,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 916,
                    "src": "10939:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AgreementFactory.Contract memory[] memory"
                    }
                  },
                  "functionReturnParameters": 911,
                  "id": 963,
                  "nodeType": "Return",
                  "src": "10932:13:0"
                }
              ]
            },
            "functionSelector": "a84b8162",
            "id": 965,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLandlordsContracts",
            "nameLocation": "10393:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "_landlordAddress",
                  "nameLocation": "10423:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 965,
                  "src": "10415:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10415:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10414:26:0"
            },
            "returnParameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 965,
                  "src": "10464:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AgreementFactory.Contract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 908,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 907,
                        "name": "Contract",
                        "nameLocations": [
                          "10464:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "10464:8:0"
                      },
                      "referencedDeclaration": 40,
                      "src": "10464:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                        "typeString": "struct AgreementFactory.Contract"
                      }
                    },
                    "id": 909,
                    "nodeType": "ArrayTypeName",
                    "src": "10464:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr",
                      "typeString": "struct AgreementFactory.Contract[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10463:19:0"
            },
            "scope": 1028,
            "src": "10384:565:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1026,
              "nodeType": "Block",
              "src": "11048:462:0",
              "statements": [
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "11073:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "11055:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AgreementFactory.Contract[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 976,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 975,
                            "name": "Contract",
                            "nameLocations": [
                              "11055:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40,
                            "src": "11055:8:0"
                          },
                          "referencedDeclaration": 40,
                          "src": "11055:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                            "typeString": "struct AgreementFactory.Contract"
                          }
                        },
                        "id": 977,
                        "nodeType": "ArrayTypeName",
                        "src": "11055:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 986,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 983,
                          "name": "contractRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "11097:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                            "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                          }
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11114:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "11097:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11082:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AgreementFactory.Contract memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 980,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 979,
                            "name": "Contract",
                            "nameLocations": [
                              "11086:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40,
                            "src": "11086:8:0"
                          },
                          "referencedDeclaration": 40,
                          "src": "11086:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                            "typeString": "struct AgreementFactory.Contract"
                          }
                        },
                        "id": 981,
                        "nodeType": "ArrayTypeName",
                        "src": "11086:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr",
                          "typeString": "struct AgreementFactory.Contract[]"
                        }
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11082:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AgreementFactory.Contract memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11055:66:0"
                },
                {
                  "assignments": [
                    988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 988,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "11136:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "11128:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 987,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11128:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 990,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11146:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11128:19:0"
                },
                {
                  "body": {
                    "id": 1021,
                    "nodeType": "Block",
                    "src": "11210:156:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1002,
                                "name": "contractRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "11225:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                  "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                }
                              },
                              "id": 1004,
                              "indexExpression": {
                                "id": 1003,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 992,
                                "src": "11242:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11225:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Contract_$40_storage",
                                "typeString": "struct AgreementFactory.Contract storage ref"
                              }
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11245:6:0",
                            "memberName": "tenant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "11225:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1006,
                            "name": "_tenantAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "11255:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11225:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1020,
                        "nodeType": "IfStatement",
                        "src": "11221:138:0",
                        "trueBody": {
                          "id": 1019,
                          "nodeType": "Block",
                          "src": "11271:88:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1008,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 978,
                                    "src": "11286:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct AgreementFactory.Contract memory[] memory"
                                    }
                                  },
                                  "id": 1010,
                                  "indexExpression": {
                                    "id": 1009,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 988,
                                    "src": "11293:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11286:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_memory_ptr",
                                    "typeString": "struct AgreementFactory.Contract memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1011,
                                    "name": "contractRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "11304:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                                      "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1013,
                                  "indexExpression": {
                                    "id": 1012,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 992,
                                    "src": "11321:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11304:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$40_storage",
                                    "typeString": "struct AgreementFactory.Contract storage ref"
                                  }
                                },
                                "src": "11286:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$40_memory_ptr",
                                  "typeString": "struct AgreementFactory.Contract memory"
                                }
                              },
                              "id": 1015,
                              "nodeType": "ExpressionStatement",
                              "src": "11286:37:0"
                            },
                            {
                              "expression": {
                                "id": 1017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "11338:9:0",
                                "subExpression": {
                                  "id": 1016,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "11338:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1018,
                              "nodeType": "ExpressionStatement",
                              "src": "11338:9:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 995,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "11176:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 996,
                        "name": "contractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "11180:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage",
                          "typeString": "struct AgreementFactory.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11197:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11180:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11176:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1022,
                  "initializationExpression": {
                    "assignments": [
                      992
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 992,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11169:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "11161:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11161:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 994,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11173:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11161:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11205:3:0",
                      "subExpression": {
                        "id": 999,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 992,
                        "src": "11205:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1001,
                    "nodeType": "ExpressionStatement",
                    "src": "11205:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "11156:210:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11444:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "11462:6:0"
                            },
                            {
                              "name": "counter",
                              "nodeType": "YulIdentifier",
                              "src": "11470:7:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11455:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11455:23:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11455:23:0"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 988,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11470:7:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 978,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11462:6:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 1023,
                  "nodeType": "InlineAssembly",
                  "src": "11435:50:0"
                },
                {
                  "expression": {
                    "id": 1024,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 978,
                    "src": "11500:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AgreementFactory.Contract memory[] memory"
                    }
                  },
                  "functionReturnParameters": 973,
                  "id": 1025,
                  "nodeType": "Return",
                  "src": "11493:13:0"
                }
              ]
            },
            "functionSelector": "951113a9",
            "id": 1027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTenantsContracts",
            "nameLocation": "10962:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "_tenantAddress",
                  "nameLocation": "10990:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "10982:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10982:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10981:24:0"
            },
            "returnParameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1027,
                  "src": "11029:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Contract_$40_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AgreementFactory.Contract[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 970,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 969,
                        "name": "Contract",
                        "nameLocations": [
                          "11029:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "11029:8:0"
                      },
                      "referencedDeclaration": 40,
                      "src": "11029:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$40_storage_ptr",
                        "typeString": "struct AgreementFactory.Contract"
                      }
                    },
                    "id": 971,
                    "nodeType": "ArrayTypeName",
                    "src": "11029:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Contract_$40_storage_$dyn_storage_ptr",
                      "typeString": "struct AgreementFactory.Contract[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11028:19:0"
            },
            "scope": 1028,
            "src": "10953:557:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1029,
        "src": "130:13115:0",
        "usedErrors": []
      }
    ],
    "src": "33:13214:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x00f3322f6A4c1dD06bbeeCfDC5DC6bE4C7942703",
      "transactionHash": "0x14fafbd7228a975836aca594ffe610f7ad89bd33a3052b3e51df694276415e60"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-04-25T05:08:27.429Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}